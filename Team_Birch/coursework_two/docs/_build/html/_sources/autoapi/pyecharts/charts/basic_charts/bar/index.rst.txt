pyecharts.charts.basic_charts.bar
=================================

.. py:module:: pyecharts.charts.basic_charts.bar


Classes
-------

.. autoapisummary::

   pyecharts.charts.basic_charts.bar.Bar


Module Contents
---------------

.. py:class:: Bar(init_opts: pyecharts.types.Init = opts.InitOpts(), render_opts: pyecharts.types.RenderInit = opts.RenderOpts())

   Bases: :py:obj:`pyecharts.charts.chart.RectChart`


   <<< Bar Chart >>>

   Bar chart presents categorical data with rectangular bars
   with heights or lengths proportional to the values that they represent.


   .. py:method:: add_yaxis(series_name: str, y_axis: pyecharts.types.Sequence[pyecharts.types.Union[pyecharts.types.Numeric, pyecharts.options.BarItem, dict]], *, xaxis_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, yaxis_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, polar_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, is_round_cap: pyecharts.types.Optional[bool] = None, color_by: pyecharts.types.Optional[str] = None, is_legend_hover_link: bool = True, color: pyecharts.types.Optional[str] = None, is_realtime_sort: bool = False, is_show_background: bool = False, background_style: pyecharts.types.Union[pyecharts.types.BarBackground, dict, None] = None, stack: pyecharts.types.Optional[str] = None, stack_strategy: pyecharts.types.Optional[str] = 'samesign', sampling: pyecharts.types.Optional[str] = None, cursor: pyecharts.types.Optional[str] = 'pointer', bar_width: pyecharts.types.Union[pyecharts.types.Numeric, str] = None, bar_max_width: pyecharts.types.Union[pyecharts.types.Numeric, str] = None, bar_min_width: pyecharts.types.Union[pyecharts.types.Numeric, str] = None, bar_min_height: pyecharts.types.Numeric = 0, category_gap: pyecharts.types.Union[pyecharts.types.Numeric, str] = '20%', gap: pyecharts.types.Optional[str] = '30%', is_large: bool = False, large_threshold: pyecharts.types.Numeric = 400, progressive: pyecharts.types.Optional[pyecharts.types.Numeric] = None, progressive_threshold: pyecharts.types.Optional[pyecharts.types.Numeric] = None, progressive_chunk_mode: pyecharts.types.Optional[str] = None, dimensions: pyecharts.types.Union[pyecharts.types.Sequence, None] = None, series_layout_by: str = 'column', dataset_index: pyecharts.types.Numeric = 0, is_clip: bool = True, z_level: pyecharts.types.Numeric = 0, z: pyecharts.types.Numeric = 2, label_opts: pyecharts.types.Label = opts.LabelOpts(), markpoint_opts: pyecharts.types.MarkPoint = None, markline_opts: pyecharts.types.MarkLine = None, markarea_opts: pyecharts.types.MarkArea = None, tooltip_opts: pyecharts.types.Tooltip = None, itemstyle_opts: pyecharts.types.ItemStyle = None, emphasis_opts: pyecharts.types.Emphasis = None, blur_opts: pyecharts.types.Blur = None, select_opts: pyecharts.types.Select = None, encode: pyecharts.types.Union[pyecharts.types.JSFunc, dict, None] = None)


