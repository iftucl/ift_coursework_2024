pyecharts.charts.basic_charts.parallel
======================================

.. py:module:: pyecharts.charts.basic_charts.parallel


Classes
-------

.. autoapisummary::

   pyecharts.charts.basic_charts.parallel.Parallel


Module Contents
---------------

.. py:class:: Parallel(init_opts: pyecharts.types.Init = opts.InitOpts(), render_opts: pyecharts.types.RenderInit = opts.RenderOpts())

   Bases: :py:obj:`pyecharts.charts.chart.Chart`


   <<< Parallel >>>

   Parallel coordinate systems are commonly used to visualize graphs of
   high dimensional data.


   .. py:method:: add_schema(schema: pyecharts.types.Sequence[pyecharts.types.Union[pyecharts.options.ParallelAxisOpts, dict]], parallel_opts: pyecharts.types.Union[pyecharts.options.ParallelOpts, dict, None] = None)


   .. py:method:: add(series_name: str, data: pyecharts.types.Sequence[pyecharts.types.Union[pyecharts.options.ParallelItem, dict]], *, parallel_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, color_by: pyecharts.types.Optional[str] = None, inactive_opacity: pyecharts.types.Optional[pyecharts.types.Numeric] = 0.05, active_opacity: pyecharts.types.Optional[pyecharts.types.Numeric] = 1, is_realtime: bool = True, is_smooth: bool = False, z_level: pyecharts.types.Numeric = 0, z: pyecharts.types.Numeric = 2, linestyle_opts: pyecharts.types.LineStyle = opts.LineStyleOpts(), tooltip_opts: pyecharts.types.Tooltip = None, itemstyle_opts: pyecharts.types.ItemStyle = None, emphasis_opts: pyecharts.types.Emphasis = None)


