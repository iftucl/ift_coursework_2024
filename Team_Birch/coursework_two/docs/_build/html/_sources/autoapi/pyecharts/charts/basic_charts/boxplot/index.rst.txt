pyecharts.charts.basic_charts.boxplot
=====================================

.. py:module:: pyecharts.charts.basic_charts.boxplot


Classes
-------

.. autoapisummary::

   pyecharts.charts.basic_charts.boxplot.Boxplot


Module Contents
---------------

.. py:class:: Boxplot(init_opts: pyecharts.types.Init = opts.InitOpts(), render_opts: pyecharts.types.RenderInit = opts.RenderOpts())

   Bases: :py:obj:`pyecharts.charts.chart.RectChart`


   <<< Boxplot >>>

   A box-plot is a statistical chart used to show a set of data dispersion data.
   It displays the maximum, minimum, median, lower quartile, and upper quartile
   of a set of data.


   .. py:method:: add_yaxis(series_name: str, y_axis: pyecharts.types.Optional[pyecharts.types.Sequence[pyecharts.types.Union[pyecharts.options.BoxplotItem, dict]]] = None, *, chart_type: str = ChartType.BOXPLOT, xaxis_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, yaxis_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, dataset_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, color_by: pyecharts.types.Optional[str] = None, is_legend_hover_link: bool = True, is_hover_animation: bool = True, layout: pyecharts.types.Optional[str] = None, box_width: pyecharts.types.Optional[pyecharts.types.Sequence] = None, selected_mode: pyecharts.types.Union[bool, str] = False, dimensions: pyecharts.types.Union[pyecharts.types.Sequence, None] = None, label_opts: pyecharts.types.Label = opts.LabelOpts(), markpoint_opts: pyecharts.types.MarkPoint = opts.MarkPointOpts(), markline_opts: pyecharts.types.MarkLine = opts.MarkLineOpts(), markarea_opts: pyecharts.types.MarkArea = None, z_level: pyecharts.types.Numeric = 0, z: pyecharts.types.Numeric = 2, tooltip_opts: pyecharts.types.Tooltip = None, itemstyle_opts: pyecharts.types.ItemStyle = None, emphasis_opts: pyecharts.types.Emphasis = None, blur_opts: pyecharts.types.Blur = None, select_opts: pyecharts.types.Select = None, encode: pyecharts.types.Union[pyecharts.types.JSFunc, dict, None] = None)


   .. py:method:: prepare_data(items)
      :staticmethod:



