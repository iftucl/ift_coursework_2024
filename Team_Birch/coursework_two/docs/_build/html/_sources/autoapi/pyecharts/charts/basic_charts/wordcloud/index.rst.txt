pyecharts.charts.basic_charts.wordcloud
=======================================

.. py:module:: pyecharts.charts.basic_charts.wordcloud


Attributes
----------

.. autoapisummary::

   pyecharts.charts.basic_charts.wordcloud.SHAPES


Classes
-------

.. autoapisummary::

   pyecharts.charts.basic_charts.wordcloud.WordCloud


Functions
---------

.. autoapisummary::

   pyecharts.charts.basic_charts.wordcloud.gen_color


Module Contents
---------------

.. py:data:: SHAPES
   :value: ('cardioid', 'diamond', 'triangle-forward', 'triangle', 'pentagon', 'star')


.. py:function:: gen_color()

   generate random color for WordCloud


.. py:class:: WordCloud(init_opts: pyecharts.types.Init = opts.InitOpts(), render_opts: pyecharts.types.RenderInit = opts.RenderOpts())

   Bases: :py:obj:`pyecharts.charts.chart.Chart`


   <<< WordCloud >>>

   Word cloud is to visually highlight the keywords that
   appear frequently in the text.


   .. py:method:: add(series_name: str, data_pair: pyecharts.types.Sequence, *, shape: str = 'circle', mask_image: pyecharts.types.Optional[str] = None, word_gap: pyecharts.types.Numeric = 20, word_size_range: pyecharts.types.Optional[pyecharts.types.Sequence] = None, rotate_step: pyecharts.types.Numeric = 45, pos_left: pyecharts.types.Optional[str] = None, pos_top: pyecharts.types.Optional[str] = None, pos_right: pyecharts.types.Optional[str] = None, pos_bottom: pyecharts.types.Optional[str] = None, width: pyecharts.types.Optional[str] = None, height: pyecharts.types.Optional[str] = None, is_draw_out_of_bound: bool = False, tooltip_opts: pyecharts.types.Tooltip = None, itemstyle_opts: pyecharts.types.ItemStyle = None, textstyle_opts: pyecharts.types.TextStyle = None, emphasis_shadow_blur: pyecharts.types.Optional[pyecharts.types.Numeric] = None, emphasis_shadow_color: pyecharts.types.Optional[str] = None)


