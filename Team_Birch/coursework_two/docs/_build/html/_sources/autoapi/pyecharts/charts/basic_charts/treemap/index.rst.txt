pyecharts.charts.basic_charts.treemap
=====================================

.. py:module:: pyecharts.charts.basic_charts.treemap


Classes
-------

.. autoapisummary::

   pyecharts.charts.basic_charts.treemap.TreeMap


Module Contents
---------------

.. py:class:: TreeMap(init_opts: pyecharts.types.Init = opts.InitOpts(), render_opts: pyecharts.types.RenderInit = opts.RenderOpts())

   Bases: :py:obj:`pyecharts.charts.chart.Chart`


   <<< TreeMap >>>

   TreeMap are a common visual representation of "hierarchical data" and "tree data".
   It mainly uses area to highlight the important nodes in the hierarchy of "tree".


   .. py:method:: add(series_name: str, data: pyecharts.types.Sequence[pyecharts.types.Union[pyecharts.options.TreeItem, dict]], *, leaf_depth: pyecharts.types.Optional[pyecharts.types.Numeric] = None, pos_left: pyecharts.types.Optional[str] = None, pos_right: pyecharts.types.Optional[str] = None, pos_top: pyecharts.types.Optional[str] = None, pos_bottom: pyecharts.types.Optional[str] = None, width: pyecharts.types.Union[str, pyecharts.types.Numeric] = '80%', height: pyecharts.types.Union[str, pyecharts.types.Numeric] = '80%', square_ratio: pyecharts.types.Optional[pyecharts.types.JSFunc] = None, drilldown_icon: str = 'â–¶', roam: pyecharts.types.Union[bool, str] = True, node_click: pyecharts.types.Union[bool, str] = 'zoomToNode', zoom_to_node_ratio: pyecharts.types.Numeric = 0.32 * 0.32, levels: pyecharts.types.TreeMapLevel = None, visual_min: pyecharts.types.Optional[pyecharts.types.Numeric] = None, visual_max: pyecharts.types.Optional[pyecharts.types.Numeric] = None, visual_dimension: pyecharts.types.Optional[pyecharts.types.Numeric] = None, color_alpha: pyecharts.types.Union[pyecharts.types.Numeric, pyecharts.types.Sequence] = None, color_saturation: pyecharts.types.Union[pyecharts.types.Numeric, pyecharts.types.Sequence] = None, color_mapping_by: str = 'index', visible_min: pyecharts.types.Numeric = 10, children_visible_min: pyecharts.types.Optional[pyecharts.types.Numeric] = None, label_opts: pyecharts.types.Label = opts.LabelOpts(position='inside'), upper_label_opts: pyecharts.types.Label = opts.LabelOpts(position='inside'), tooltip_opts: pyecharts.types.Tooltip = None, itemstyle_opts: pyecharts.types.ItemStyle = None, breadcrumb_opts: pyecharts.types.TreeMapBreadcrumb = None, emphasis_opts: pyecharts.types.Emphasis = None)


