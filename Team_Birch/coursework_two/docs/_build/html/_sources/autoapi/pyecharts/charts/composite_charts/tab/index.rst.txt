pyecharts.charts.composite_charts.tab
=====================================

.. py:module:: pyecharts.charts.composite_charts.tab


Attributes
----------

.. autoapisummary::

   pyecharts.charts.composite_charts.tab.DEFAULT_TAB_CSS
   pyecharts.charts.composite_charts.tab.DEFAULT_TAB_BUTTON_CSS
   pyecharts.charts.composite_charts.tab.DEFAULT_TAB_BUTTON_HOVER_CSS
   pyecharts.charts.composite_charts.tab.DEFAULT_TAB_BUTTON_ACTIVE_CSS


Classes
-------

.. autoapisummary::

   pyecharts.charts.composite_charts.tab.Tab


Module Contents
---------------

.. py:data:: DEFAULT_TAB_CSS
   :type:  str
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """
      .chart-container {
          display: block;
      }
      
      .chart-container:nth-child(n+2) {
          display: none;
      }
      
      .tab {
          overflow: hidden;
          border: 1px solid #ccc;
          background-color: #f1f1f1;
      }
      
      """

   .. raw:: html

      </details>



.. py:data:: DEFAULT_TAB_BUTTON_CSS
   :type:  str
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """
      .tab button {
          background-color: inherit;
          float: left;
          border: none;
          outline: none;
          cursor: pointer;
          padding: 12px 16px;
          transition: 0.3s;
      }
      
      """

   .. raw:: html

      </details>



.. py:data:: DEFAULT_TAB_BUTTON_HOVER_CSS
   :type:  str
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """
      .tab button:hover {
          background-color: #ddd;
      }
      
      """

   .. raw:: html

      </details>



.. py:data:: DEFAULT_TAB_BUTTON_ACTIVE_CSS
   :type:  str
   :value: Multiline-String

   .. raw:: html

      <details><summary>Show Value</summary>

   .. code-block:: python

      """
      .tab button.active {
          background-color: #ccc;
      }
      
      """

   .. raw:: html

      </details>



.. py:class:: Tab(page_title: str = CurrentConfig.PAGE_TITLE, js_host: str = '', bg_color: str = '', tab_css_opts: pyecharts.options.charts_options.TabChartGlobalOpts = TabChartGlobalOpts())

   Bases: :py:obj:`pyecharts.charts.mixins.CompositeMixin`


   .. py:attribute:: js_host
      :type:  str
      :value: 'https://assets.pyecharts.org/assets/v5/'



   .. py:attribute:: page_title
      :type:  str
      :value: 'Awesome-pyecharts'



   .. py:attribute:: bg_color
      :value: ''



   .. py:attribute:: download_button
      :type:  bool
      :value: False



   .. py:attribute:: use_custom_tab_css


   .. py:attribute:: tab_custom_css


   .. py:attribute:: js_functions
      :type:  pyecharts.commons.utils.OrderedSet


   .. py:attribute:: js_dependencies
      :type:  pyecharts.commons.utils.OrderedSet


   .. py:method:: add(chart, tab_name)


   .. py:method:: render(path: str = 'render.html', template_name: str = 'simple_tab.html', env: pyecharts.types.Optional[jinja2.Environment] = None, **kwargs) -> str


   .. py:method:: render_embed(template_name: str = 'simple_tab.html', env: pyecharts.types.Optional[jinja2.Environment] = None, **kwargs) -> str


   .. py:method:: render_notebook()


