pyecharts.charts.basic_charts.geo
=================================

.. py:module:: pyecharts.charts.basic_charts.geo


Classes
-------

.. autoapisummary::

   pyecharts.charts.basic_charts.geo.GeoChartBase
   pyecharts.charts.basic_charts.geo.Geo


Module Contents
---------------

.. py:class:: GeoChartBase(init_opts: pyecharts.types.Init = opts.InitOpts(), render_opts: pyecharts.types.RenderInit = opts.RenderOpts())

   Bases: :py:obj:`pyecharts.charts.chart.Chart`


   `Base` is the root class for all graphical class, it provides
   part of the initialization parameters and common methods


   .. py:method:: add_geo_json(geo_json: dict)


   .. py:method:: add_coordinate(name: str, longitude: pyecharts.types.Numeric, latitude: pyecharts.types.Numeric)


   .. py:method:: add_coordinate_json(json_file: str)


   .. py:method:: get_coordinate(name: str) -> pyecharts.types.Optional[pyecharts.types.Sequence]


   .. py:method:: add(series_name: str, data_pair: pyecharts.types.Sequence, type_: str = 'scatter', *, symbol: pyecharts.types.Optional[str] = None, symbol_size: pyecharts.types.Numeric = 12, blur_size: pyecharts.types.Numeric = 20, point_size: pyecharts.types.Numeric = 20, radius: pyecharts.types.Optional[pyecharts.types.Sequence] = None, color: pyecharts.types.Optional[str] = None, is_polyline: bool = False, is_large: bool = False, large_threshold: pyecharts.types.Numeric = 2000, progressive: pyecharts.types.Numeric = 400, progressive_threshold: pyecharts.types.Numeric = 3000, label_opts: pyecharts.types.Label = None, effect_opts: pyecharts.types.Effect = opts.EffectOpts(), linestyle_opts: pyecharts.types.LineStyle = opts.LineStyleOpts(), tooltip_opts: pyecharts.types.Tooltip = None, itemstyle_opts: pyecharts.types.ItemStyle = None, render_item: pyecharts.types.JsCode = None, encode: pyecharts.types.Union[pyecharts.types.JsCode, dict] = None)


.. py:class:: Geo(init_opts: pyecharts.types.Init = opts.InitOpts(), is_ignore_nonexistent_coord: bool = False, render_opts: pyecharts.types.RenderInit = opts.RenderOpts())

   Bases: :py:obj:`GeoChartBase`


   <<< geo coordinate system >>>

   support scatter plot and line


   .. py:method:: add_schema(maptype: str = 'china', is_roam: bool = True, zoom: pyecharts.types.Optional[pyecharts.types.Numeric] = None, center: pyecharts.types.Optional[pyecharts.types.Sequence] = None, aspect_scale: pyecharts.types.Numeric = 0.75, bounding_coords: pyecharts.types.Optional[pyecharts.types.Sequence[pyecharts.types.Numeric]] = None, min_scale_limit: pyecharts.types.Optional[pyecharts.types.Numeric] = None, max_scale_limit: pyecharts.types.Optional[pyecharts.types.Numeric] = None, name_property: str = 'name', selected_mode: pyecharts.types.Union[bool, str] = False, layout_center: pyecharts.types.Optional[pyecharts.types.Sequence[str]] = None, layout_size: pyecharts.types.Union[str, pyecharts.types.Numeric] = None, label_opts: pyecharts.types.Label = None, itemstyle_opts: pyecharts.types.ItemStyle = None, emphasis_itemstyle_opts: pyecharts.types.ItemStyle = None, emphasis_label_opts: pyecharts.types.Label = None, regions_opts: pyecharts.types.Union[pyecharts.types.Sequence[pyecharts.types.GeoRegions], pyecharts.types.Sequence[dict]] = None)


