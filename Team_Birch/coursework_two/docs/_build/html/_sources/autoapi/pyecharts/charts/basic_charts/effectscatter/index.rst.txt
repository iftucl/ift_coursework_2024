pyecharts.charts.basic_charts.effectscatter
===========================================

.. py:module:: pyecharts.charts.basic_charts.effectscatter


Classes
-------

.. autoapisummary::

   pyecharts.charts.basic_charts.effectscatter.EffectScatter


Module Contents
---------------

.. py:class:: EffectScatter(init_opts: pyecharts.types.Init = opts.InitOpts(), render_opts: pyecharts.types.RenderInit = opts.RenderOpts())

   Bases: :py:obj:`pyecharts.charts.chart.RectChart`


   <<< Scatter plots with ripple effects animation >>>

   Use animation effects to visually highlight designated data set.


   .. py:method:: add_yaxis(series_name: str, y_axis: pyecharts.types.Sequence[pyecharts.types.Union[pyecharts.options.EffectScatterItem, dict]], *, xaxis_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, yaxis_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, polar_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, geo_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, calendar_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, dataset_index: pyecharts.types.Optional[pyecharts.types.Numeric] = None, color: pyecharts.types.Optional[str] = None, color_by: pyecharts.types.Optional[str] = None, is_legend_hover_link: bool = True, show_effect_on: str = 'render', coordinate_system: str = 'cartesian2d', symbol: pyecharts.types.Optional[str] = None, symbol_size: pyecharts.types.Numeric = 10, symbol_rotate: pyecharts.types.Optional[pyecharts.types.Numeric] = None, selected_mode: pyecharts.types.Union[bool, str] = False, label_opts: pyecharts.types.Label = opts.LabelOpts(), effect_opts: pyecharts.types.Effect = opts.EffectOpts(), tooltip_opts: pyecharts.types.Tooltip = None, itemstyle_opts: pyecharts.types.ItemStyle = None, emphasis_opts: pyecharts.types.Emphasis = None, markpoint_opts: pyecharts.types.MarkPoint = None, markline_opts: pyecharts.types.MarkLine = None, markarea_opts: pyecharts.types.MarkArea = None, z_level: pyecharts.types.Numeric = 0, z: pyecharts.types.Numeric = 2, encode: pyecharts.types.Union[pyecharts.types.JSFunc, dict, None] = None)


