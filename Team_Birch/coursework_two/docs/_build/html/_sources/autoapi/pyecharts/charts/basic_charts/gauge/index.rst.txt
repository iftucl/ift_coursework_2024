pyecharts.charts.basic_charts.gauge
===================================

.. py:module:: pyecharts.charts.basic_charts.gauge


Classes
-------

.. autoapisummary::

   pyecharts.charts.basic_charts.gauge.Gauge


Module Contents
---------------

.. py:class:: Gauge(init_opts: pyecharts.types.Init = opts.InitOpts(), render_opts: pyecharts.types.RenderInit = opts.RenderOpts())

   Bases: :py:obj:`pyecharts.charts.chart.Chart`


   <<< Gauge >>>

   The gauge displays a single key business measure.


   .. py:method:: add(series_name: str, data_pair: pyecharts.types.Sequence, *, min_: pyecharts.types.Numeric = 0, max_: pyecharts.types.Numeric = 100, split_number: pyecharts.types.Numeric = 10, center: pyecharts.types.Sequence = None, radius: pyecharts.types.Union[pyecharts.types.Numeric, str] = '75%', start_angle: pyecharts.types.Numeric = 225, end_angle: pyecharts.types.Numeric = -45, is_clock_wise: bool = True, title_label_opts: pyecharts.types.GaugeTitle = opts.GaugeTitleOpts(offset_center=['0%', '20%']), detail_label_opts: pyecharts.types.GaugeDetail = opts.GaugeDetailOpts(formatter='{value}%', offset_center=['0%', '40%']), progress: pyecharts.types.GaugeProgress = opts.GaugeProgressOpts(), pointer: pyecharts.types.GaugePointer = opts.GaugePointerOpts(), anchor: pyecharts.types.GaugeAnchor = opts.GaugeAnchorOpts(), tooltip_opts: pyecharts.types.Tooltip = None, axisline_opts: pyecharts.types.AxisLine = None, axistick_opts: pyecharts.types.AxisTick = None, axislabel_opts: pyecharts.types.AxisLabel = None, itemstyle_opts: pyecharts.types.ItemStyle = None, emphasis_opts: pyecharts.types.Emphasis = None)


