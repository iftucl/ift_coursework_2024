pyecharts.charts.basic_charts.sankey
====================================

.. py:module:: pyecharts.charts.basic_charts.sankey


Classes
-------

.. autoapisummary::

   pyecharts.charts.basic_charts.sankey.Sankey


Module Contents
---------------

.. py:class:: Sankey(init_opts: pyecharts.types.Init = opts.InitOpts(), render_opts: pyecharts.types.RenderInit = opts.RenderOpts())

   Bases: :py:obj:`pyecharts.charts.chart.Chart`


   <<< Sankey >>>

   Sankey diagram is a special flow diagram, which is mainly used to
   express how raw materials, energy and so on from the initial form through
   the intermediate process of processing, transformation to the final form.


   .. py:method:: add(series_name: str, nodes: pyecharts.types.Sequence, links: pyecharts.types.Sequence, *, pos_left: pyecharts.types.Union[str, pyecharts.types.Numeric] = '5%', pos_top: pyecharts.types.Union[str, pyecharts.types.Numeric] = '5%', pos_right: pyecharts.types.Union[str, pyecharts.types.Numeric] = '20%', pos_bottom: pyecharts.types.Union[str, pyecharts.types.Numeric] = '5%', node_width: pyecharts.types.Numeric = 20, node_gap: pyecharts.types.Numeric = 8, node_align: str = 'justify', layout_iterations: pyecharts.types.Optional[pyecharts.types.Numeric] = None, orient: str = 'horizontal', is_draggable: bool = True, edge_label_opt: pyecharts.types.Label = None, levels: pyecharts.types.SankeyLevel = None, label_opts: pyecharts.types.Label = opts.LabelOpts(), linestyle_opt: pyecharts.types.LineStyle = opts.LineStyleOpts(), tooltip_opts: pyecharts.types.Tooltip = None, itemstyle_opts: pyecharts.types.ItemStyle = None, emphasis_opts: pyecharts.types.Emphasis = None)


