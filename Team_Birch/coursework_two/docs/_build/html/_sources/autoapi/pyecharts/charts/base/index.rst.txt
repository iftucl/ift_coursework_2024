pyecharts.charts.base
=====================

.. py:module:: pyecharts.charts.base


Classes
-------

.. autoapisummary::

   pyecharts.charts.base.Base


Functions
---------

.. autoapisummary::

   pyecharts.charts.base.default


Module Contents
---------------

.. py:class:: Base(init_opts: pyecharts.types.Union[pyecharts.options.InitOpts, dict] = InitOpts(), render_opts: pyecharts.types.Union[pyecharts.options.RenderOpts, dict] = RenderOpts())

   Bases: :py:obj:`pyecharts.charts.mixins.ChartMixin`


   `Base` is the root class for all graphical class, it provides
   part of the initialization parameters and common methods


   .. py:attribute:: width


   .. py:attribute:: height


   .. py:attribute:: horizontal_center
      :value: 'text-align:center; margin: auto'



   .. py:attribute:: renderer


   .. py:attribute:: page_title


   .. py:attribute:: theme


   .. py:attribute:: chart_id


   .. py:attribute:: fill_bg


   .. py:attribute:: bg_color


   .. py:attribute:: options
      :type:  dict


   .. py:attribute:: render_options
      :type:  dict


   .. py:attribute:: js_host
      :type:  str


   .. py:attribute:: js_functions
      :type:  pyecharts.commons.utils.OrderedSet


   .. py:attribute:: js_dependencies
      :type:  pyecharts.commons.utils.OrderedSet


   .. py:attribute:: js_events
      :type:  pyecharts.commons.utils.OrderedSet


   .. py:method:: use_echarts_stat()


   .. py:method:: get_chart_id() -> str


   .. py:method:: get_options() -> dict


   .. py:method:: dump_options() -> str


   .. py:method:: dump_options_with_quotes() -> str


   .. py:method:: render(path: str = 'render.html', template_name: str = 'simple_chart.html', env: pyecharts.types.Optional[jinja2.Environment] = None, **kwargs) -> str


   .. py:method:: render_embed(template_name: str = 'simple_chart.html', env: pyecharts.types.Optional[jinja2.Environment] = None, **kwargs) -> str


   .. py:method:: render_notebook()


.. py:function:: default(o)

