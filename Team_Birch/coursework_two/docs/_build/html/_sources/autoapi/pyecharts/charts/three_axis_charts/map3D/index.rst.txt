pyecharts.charts.three_axis_charts.map3D
========================================

.. py:module:: pyecharts.charts.three_axis_charts.map3D


Classes
-------

.. autoapisummary::

   pyecharts.charts.three_axis_charts.map3D.Map3D


Module Contents
---------------

.. py:class:: Map3D(init_opts: pyecharts.types.Init = InitOpts(), render_opts: pyecharts.types.RenderInit = RenderOpts())

   Bases: :py:obj:`pyecharts.charts.chart.Chart3D`


   3D map


   .. py:method:: add(series_name: str, data_pair: pyecharts.types.Sequence, *, type_: pyecharts.globals.ChartType = None, maptype: str = 'china', is_map_symbol_show: bool = True, grid_3d_index: pyecharts.types.Numeric = 0, geo_3d_index: pyecharts.types.Numeric = 0, globe_index: pyecharts.types.Numeric = 0, bar_size: pyecharts.types.Optional[pyecharts.types.Numeric] = None, bevel_size: pyecharts.types.Numeric = 0, bevel_smoothness: pyecharts.types.Numeric = 2, stack: pyecharts.types.Optional[str] = None, min_height: pyecharts.types.Numeric = 2, symbol: str = 'circle', symbol_size: pyecharts.types.Union[pyecharts.types.Numeric, pyecharts.types.Sequence, pyecharts.types.JSFunc] = 10, blend_mode: str = 'source-over', is_polyline: bool = False, effect: pyecharts.types.Lines3DEffect = None, linestyle_opts: pyecharts.types.LineStyle = opts.LineStyleOpts(), label_opts: pyecharts.types.Label = opts.LabelOpts(), tooltip_opts: pyecharts.types.Tooltip = None, itemstyle_opts: pyecharts.types.ItemStyle = None, emphasis_label_opts: pyecharts.types.Label = None, emphasis_itemstyle_opts: pyecharts.types.ItemStyle = None, shading: pyecharts.types.Optional[str] = None, realistic_material_opts: pyecharts.types.Optional[pyecharts.types.Map3DRealisticMaterial] = None, lambert_material_opts: pyecharts.types.Optional[pyecharts.types.Map3DLambertMaterial] = None, color_material_opts: pyecharts.types.Optional[pyecharts.types.Map3DColorMaterial] = None, zlevel: pyecharts.types.Numeric = -10, is_silent: bool = False, is_animation: bool = True, animation_duration_update: pyecharts.types.Numeric = 100, animation_easing_update: pyecharts.types.Numeric = 'cubicOut')


   .. py:method:: add_schema(maptype: str = 'china', name: pyecharts.types.Optional[str] = None, *, box_width: pyecharts.types.Optional[pyecharts.types.Numeric] = 100, box_height: pyecharts.types.Optional[pyecharts.types.Numeric] = 10, box_depth: pyecharts.types.Optional[pyecharts.types.Numeric] = None, region_height: pyecharts.types.Optional[pyecharts.types.Numeric] = 3, environment: pyecharts.types.Optional[pyecharts.types.JSFunc] = None, is_show_ground: bool = False, ground_color: str = '#aaa', is_instancing: bool = False, map3d_label: pyecharts.types.Map3DLabel = None, itemstyle_opts: pyecharts.types.ItemStyle = None, emphasis_label_opts: pyecharts.types.Label = None, emphasis_itemstyle_opts: pyecharts.types.ItemStyle = None, shading: pyecharts.types.Optional[str] = None, realistic_material_opts: pyecharts.types.Optional[pyecharts.types.Map3DRealisticMaterial] = None, lambert_material_opts: pyecharts.types.Optional[pyecharts.types.Map3DLambertMaterial] = None, color_material_opts: pyecharts.types.Optional[pyecharts.types.Map3DColorMaterial] = None, light_opts: pyecharts.types.Optional[pyecharts.types.Map3DLight] = None, post_effect_opts: pyecharts.types.Optional[pyecharts.types.Map3DPostEffect] = None, is_enable_super_sampling: pyecharts.types.Union[str, bool] = 'auto', view_control_opts: pyecharts.types.Optional[pyecharts.types.Map3DViewControl] = None, zlevel: pyecharts.types.Optional[pyecharts.types.Numeric] = -10, pos_left: pyecharts.types.Union[pyecharts.types.Numeric, str] = 'auto', pos_top: pyecharts.types.Union[pyecharts.types.Numeric, str] = 'auto', pos_right: pyecharts.types.Union[pyecharts.types.Numeric, str] = 'auto', pos_bottom: pyecharts.types.Union[pyecharts.types.Numeric, str] = 'auto', pos_width: pyecharts.types.Union[pyecharts.types.Numeric, str] = 'auto', pos_height: pyecharts.types.Union[pyecharts.types.Numeric, str] = 'auto')


