django.db.backends.ddl_references
=================================

.. py:module:: django.db.backends.ddl_references

.. autoapi-nested-parse::

   Helpers to manipulate deferred DDL statements that might need to be adjusted or
   discarded within when executing a migration.



Classes
-------

.. autoapisummary::

   django.db.backends.ddl_references.Reference
   django.db.backends.ddl_references.Table
   django.db.backends.ddl_references.TableColumns
   django.db.backends.ddl_references.Columns
   django.db.backends.ddl_references.IndexName
   django.db.backends.ddl_references.IndexColumns
   django.db.backends.ddl_references.ForeignKeyName
   django.db.backends.ddl_references.Statement
   django.db.backends.ddl_references.Expressions


Module Contents
---------------

.. py:class:: Reference

   Base class that defines the reference interface.


   .. py:method:: references_table(table)

      Return whether or not this instance references the specified table.



   .. py:method:: references_column(table, column)

      Return whether or not this instance references the specified column.



   .. py:method:: rename_table_references(old_table, new_table)

      Rename all references to the old_name to the new_table.



   .. py:method:: rename_column_references(table, old_column, new_column)

      Rename all references to the old_column to the new_column.



.. py:class:: Table(table, quote_name)

   Bases: :py:obj:`Reference`


   Hold a reference to a table.


   .. py:attribute:: table


   .. py:attribute:: quote_name


   .. py:method:: references_table(table)

      Return whether or not this instance references the specified table.



   .. py:method:: rename_table_references(old_table, new_table)

      Rename all references to the old_name to the new_table.



.. py:class:: TableColumns(table, columns)

   Bases: :py:obj:`Table`


   Base class for references to multiple columns of a table.


   .. py:attribute:: table


   .. py:attribute:: columns


   .. py:method:: references_column(table, column)

      Return whether or not this instance references the specified column.



   .. py:method:: rename_column_references(table, old_column, new_column)

      Rename all references to the old_column to the new_column.



.. py:class:: Columns(table, columns, quote_name, col_suffixes=())

   Bases: :py:obj:`TableColumns`


   Hold a reference to one or many columns.


   .. py:attribute:: quote_name


   .. py:attribute:: col_suffixes
      :value: ()



.. py:class:: IndexName(table, columns, suffix, create_index_name)

   Bases: :py:obj:`TableColumns`


   Hold a reference to an index name.


   .. py:attribute:: suffix


   .. py:attribute:: create_index_name


.. py:class:: IndexColumns(table, columns, quote_name, col_suffixes=(), opclasses=())

   Bases: :py:obj:`Columns`


   Hold a reference to one or many columns.


   .. py:attribute:: opclasses
      :value: ()



.. py:class:: ForeignKeyName(from_table, from_columns, to_table, to_columns, suffix_template, create_fk_name)

   Bases: :py:obj:`TableColumns`


   Hold a reference to a foreign key name.


   .. py:attribute:: to_reference


   .. py:attribute:: suffix_template


   .. py:attribute:: create_fk_name


   .. py:method:: references_table(table)

      Return whether or not this instance references the specified table.



   .. py:method:: references_column(table, column)

      Return whether or not this instance references the specified column.



   .. py:method:: rename_table_references(old_table, new_table)

      Rename all references to the old_name to the new_table.



   .. py:method:: rename_column_references(table, old_column, new_column)

      Rename all references to the old_column to the new_column.



.. py:class:: Statement(template, **parts)

   Bases: :py:obj:`Reference`


   Statement template and formatting parameters container.

   Allows keeping a reference to a statement without interpolating identifiers
   that might have to be adjusted if they're referencing a table or column
   that is removed


   .. py:attribute:: template


   .. py:attribute:: parts


   .. py:method:: references_table(table)

      Return whether or not this instance references the specified table.



   .. py:method:: references_column(table, column)

      Return whether or not this instance references the specified column.



   .. py:method:: rename_table_references(old_table, new_table)

      Rename all references to the old_name to the new_table.



   .. py:method:: rename_column_references(table, old_column, new_column)

      Rename all references to the old_column to the new_column.



.. py:class:: Expressions(table, expressions, compiler, quote_value)

   Bases: :py:obj:`TableColumns`


   Base class for references to multiple columns of a table.


   .. py:attribute:: compiler


   .. py:attribute:: expressions


   .. py:attribute:: quote_value


   .. py:method:: rename_table_references(old_table, new_table)

      Rename all references to the old_name to the new_table.



   .. py:method:: rename_column_references(table, old_column, new_column)

      Rename all references to the old_column to the new_column.



