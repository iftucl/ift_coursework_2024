django.forms.utils
==================

.. py:module:: django.forms.utils


Attributes
----------

.. autoapisummary::

   django.forms.utils.DEFAULT_TEMPLATE_DEPRECATION_MSG


Classes
-------

.. autoapisummary::

   django.forms.utils.RenderableMixin
   django.forms.utils.RenderableFormMixin
   django.forms.utils.RenderableErrorMixin
   django.forms.utils.ErrorDict
   django.forms.utils.ErrorList


Functions
---------

.. autoapisummary::

   django.forms.utils.pretty_name
   django.forms.utils.flatatt
   django.forms.utils.from_current_timezone
   django.forms.utils.to_current_timezone


Module Contents
---------------

.. py:function:: pretty_name(name)

   Convert 'first_name' to 'First name'.


.. py:function:: flatatt(attrs)

   Convert a dictionary of attributes to a single string.
   The returned string will contain a leading space followed by key="value",
   XML-style pairs. In the case of a boolean value, the key will appear
   without a value. It is assumed that the keys do not need to be
   XML-escaped. If the passed dictionary is empty, then return an empty
   string.

   The result is passed through 'mark_safe' (by way of 'format_html_join').


.. py:data:: DEFAULT_TEMPLATE_DEPRECATION_MSG

.. py:class:: RenderableMixin

   .. py:method:: get_context()
      :abstractmethod:



   .. py:method:: render(template_name=None, context=None, renderer=None)


.. py:class:: RenderableFormMixin

   Bases: :py:obj:`RenderableMixin`


   .. py:method:: as_p()

      Render as <p> elements.



   .. py:method:: as_table()

      Render as <tr> elements excluding the surrounding <table> tag.



   .. py:method:: as_ul()

      Render as <li> elements excluding the surrounding <ul> tag.



   .. py:method:: as_div()

      Render as <div> elements.



.. py:class:: RenderableErrorMixin

   Bases: :py:obj:`RenderableMixin`


   .. py:method:: as_json(escape_html=False)


   .. py:method:: as_text()


   .. py:method:: as_ul()


.. py:class:: ErrorDict(*args, renderer=None, **kwargs)

   Bases: :py:obj:`dict`, :py:obj:`RenderableErrorMixin`


   A collection of errors that knows how to display itself in various formats.

   The dictionary keys are the field names, and the values are the errors.


   .. py:attribute:: template_name
      :value: 'django/forms/errors/dict/default.html'



   .. py:attribute:: template_name_text
      :value: 'django/forms/errors/dict/text.txt'



   .. py:attribute:: template_name_ul
      :value: 'django/forms/errors/dict/ul.html'



   .. py:attribute:: renderer


   .. py:method:: as_data()


   .. py:method:: get_json_data(escape_html=False)


   .. py:method:: get_context()


.. py:class:: ErrorList(initlist=None, error_class=None, renderer=None)

   Bases: :py:obj:`collections.UserList`, :py:obj:`list`, :py:obj:`RenderableErrorMixin`


   A collection of errors that knows how to display itself in various formats.


   .. py:attribute:: template_name
      :value: 'django/forms/errors/list/default.html'



   .. py:attribute:: template_name_text
      :value: 'django/forms/errors/list/text.txt'



   .. py:attribute:: template_name_ul
      :value: 'django/forms/errors/list/ul.html'



   .. py:attribute:: renderer


   .. py:method:: as_data()


   .. py:method:: copy()

      Return a shallow copy of the list.



   .. py:method:: get_json_data(escape_html=False)


   .. py:method:: get_context()


.. py:function:: from_current_timezone(value)

   When time zone support is enabled, convert naive datetimes
   entered in the current time zone to aware datetimes.


.. py:function:: to_current_timezone(value)

   When time zone support is enabled, convert aware datetimes
   to naive datetimes in the current time zone for display.


