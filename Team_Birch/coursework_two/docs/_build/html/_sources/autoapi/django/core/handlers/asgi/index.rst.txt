django.core.handlers.asgi
=========================

.. py:module:: django.core.handlers.asgi


Attributes
----------

.. autoapisummary::

   django.core.handlers.asgi.logger


Classes
-------

.. autoapisummary::

   django.core.handlers.asgi.ASGIRequest
   django.core.handlers.asgi.ASGIHandler


Module Contents
---------------

.. py:data:: logger

.. py:class:: ASGIRequest(scope, body_file)

   Bases: :py:obj:`django.http.HttpRequest`


   Custom request subclass that decodes from an ASGI-standard request dict
   and wraps request body handling.


   .. py:attribute:: body_receive_timeout
      :value: 60



   .. py:attribute:: scope


   .. py:attribute:: resolver_match
      :value: None



   .. py:attribute:: script_name


   .. py:attribute:: method


   .. py:attribute:: META


   .. py:method:: GET()


   .. py:attribute:: POST


   .. py:attribute:: FILES


   .. py:method:: COOKIES()


   .. py:method:: close()


.. py:class:: ASGIHandler

   Bases: :py:obj:`django.core.handlers.base.BaseHandler`


   Handler for ASGI requests.


   .. py:attribute:: request_class


   .. py:attribute:: chunk_size
      :value: 65536



   .. py:method:: handle(scope, receive, send)
      :async:


      Handles the ASGI request. Called via the __call__ method.



   .. py:method:: read_body(receive)
      :async:


      Reads an HTTP body from an ASGI connection.



   .. py:method:: create_request(scope, body_file)

      Create the Request object and returns either (request, None) or
      (None, response) if there is an error response.



   .. py:method:: handle_uncaught_exception(request, resolver, exc_info)

      Last-chance handler for exceptions.



   .. py:method:: send_response(response, send)
      :async:


      Encode and send a response out over ASGI.



   .. py:method:: chunk_bytes(data)
      :classmethod:


      Chunks some data up so it can be sent in reasonable size messages.
      Yields (chunk, last_chunk) tuples.



   .. py:method:: get_script_prefix(scope)

      Return the script prefix to use from either the scope or a setting.



