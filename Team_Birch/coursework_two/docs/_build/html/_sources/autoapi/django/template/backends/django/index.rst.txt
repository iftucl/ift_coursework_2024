django.template.backends.django
===============================

.. py:module:: django.template.backends.django


Classes
-------

.. autoapisummary::

   django.template.backends.django.DjangoTemplates
   django.template.backends.django.Template


Functions
---------

.. autoapisummary::

   django.template.backends.django.copy_exception
   django.template.backends.django.reraise
   django.template.backends.django.get_template_tag_modules
   django.template.backends.django.get_installed_libraries
   django.template.backends.django.get_package_libraries


Module Contents
---------------

.. py:class:: DjangoTemplates(params)

   Bases: :py:obj:`django.template.backends.base.BaseEngine`


   .. py:attribute:: app_dirname
      :value: 'templates'



   .. py:attribute:: engine


   .. py:method:: from_string(template_code)


   .. py:method:: get_template(template_name)


   .. py:method:: get_templatetag_libraries(custom_libraries)

      Return a collation of template tag libraries from installed
      applications and the supplied custom_libraries argument.



.. py:class:: Template(template, backend)

   .. py:attribute:: template


   .. py:attribute:: backend


   .. py:property:: origin


   .. py:method:: render(context=None, request=None)


.. py:function:: copy_exception(exc, backend=None)

   Create a new TemplateDoesNotExist. Preserve its declared attributes and
   template debug data but discard __traceback__, __context__, and __cause__
   to make this object suitable for keeping around (in a cache, for example).


.. py:function:: reraise(exc, backend)

   Reraise TemplateDoesNotExist while maintaining template debug information.


.. py:function:: get_template_tag_modules()

   Yield (module_name, module_path) pairs for all installed template tag
   libraries.


.. py:function:: get_installed_libraries()

   Return the built-in template tag libraries and those from installed
   applications. Libraries are stored in a dictionary where keys are the
   individual module names, not the full module paths. Example:
   django.templatetags.i18n is stored as i18n.


.. py:function:: get_package_libraries(pkg)

   Recursively yield template tag libraries defined in submodules of a
   package.


