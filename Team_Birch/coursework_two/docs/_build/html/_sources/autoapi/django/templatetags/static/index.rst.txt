django.templatetags.static
==========================

.. py:module:: django.templatetags.static


Attributes
----------

.. autoapisummary::

   django.templatetags.static.register


Classes
-------

.. autoapisummary::

   django.templatetags.static.PrefixNode
   django.templatetags.static.StaticNode


Functions
---------

.. autoapisummary::

   django.templatetags.static.get_static_prefix
   django.templatetags.static.get_media_prefix
   django.templatetags.static.do_static
   django.templatetags.static.static


Module Contents
---------------

.. py:data:: register

.. py:class:: PrefixNode(varname=None, name=None)

   Bases: :py:obj:`django.template.Node`


   .. py:attribute:: varname
      :value: None



   .. py:attribute:: name
      :value: None



   .. py:method:: handle_token(parser, token, name)
      :classmethod:


      Class method to parse prefix node and return a Node.



   .. py:method:: handle_simple(name)
      :classmethod:



   .. py:method:: render(context)


.. py:function:: get_static_prefix(parser, token)

   Populate a template variable with the static prefix,
   ``settings.STATIC_URL``.

   Usage::

       {% get_static_prefix [as varname] %}

   Examples::

       {% get_static_prefix %}
       {% get_static_prefix as static_prefix %}


.. py:function:: get_media_prefix(parser, token)

   Populate a template variable with the media prefix,
   ``settings.MEDIA_URL``.

   Usage::

       {% get_media_prefix [as varname] %}

   Examples::

       {% get_media_prefix %}
       {% get_media_prefix as media_prefix %}


.. py:class:: StaticNode(varname=None, path=None)

   Bases: :py:obj:`django.template.Node`


   .. py:attribute:: child_nodelists
      :value: ()



   .. py:attribute:: path
      :value: None



   .. py:attribute:: varname
      :value: None



   .. py:method:: url(context)


   .. py:method:: render(context)


   .. py:method:: handle_simple(path)
      :classmethod:



   .. py:method:: handle_token(parser, token)
      :classmethod:


      Class method to parse prefix node and return a Node.



.. py:function:: do_static(parser, token)

   Join the given path with the STATIC_URL setting.

   Usage::

       {% static path [as varname] %}

   Examples::

       {% static "myapp/css/base.css" %}
       {% static variable_with_path %}
       {% static "myapp/css/base.css" as admin_base_css %}
       {% static variable_with_path as varname %}


.. py:function:: static(path)

   Given a relative path to a static asset, return the absolute path to the
   asset.


