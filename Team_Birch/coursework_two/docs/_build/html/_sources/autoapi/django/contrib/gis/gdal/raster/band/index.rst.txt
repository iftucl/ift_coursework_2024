django.contrib.gis.gdal.raster.band
===================================

.. py:module:: django.contrib.gis.gdal.raster.band


Classes
-------

.. autoapisummary::

   django.contrib.gis.gdal.raster.band.GDALBand
   django.contrib.gis.gdal.raster.band.BandList


Module Contents
---------------

.. py:class:: GDALBand(source, index)

   Bases: :py:obj:`django.contrib.gis.gdal.raster.base.GDALRasterBase`


   Wrap a GDAL raster band, needs to be obtained from a GDALRaster object.


   .. py:attribute:: source


   .. py:property:: description

      Return the description string of the band.


   .. py:property:: width

      Width (X axis) in pixels of the band.


   .. py:property:: height

      Height (Y axis) in pixels of the band.


   .. py:property:: pixel_count

      Return the total number of pixels in this band.


   .. py:method:: statistics(refresh=False, approximate=False)

      Compute statistics on the pixel values of this band.

      The return value is a tuple with the following structure:
      (minimum, maximum, mean, standard deviation).

      If approximate=True, the statistics may be computed based on overviews
      or a subset of image tiles.

      If refresh=True, the statistics will be computed from the data directly,
      and the cache will be updated where applicable.

      For empty bands (where all pixel values are nodata), all statistics
      values are returned as None.

      For raster formats using Persistent Auxiliary Metadata (PAM) services,
      the statistics might be cached in an auxiliary file.



   .. py:property:: min

      Return the minimum pixel value for this band.


   .. py:property:: max

      Return the maximum pixel value for this band.


   .. py:property:: mean

      Return the mean of all pixel values of this band.


   .. py:property:: std

      Return the standard deviation of all pixel values of this band.


   .. py:property:: nodata_value

      Return the nodata value for this band, or None if it isn't set.


   .. py:method:: datatype(as_string=False)

      Return the GDAL Pixel Datatype for this band.



   .. py:method:: color_interp(as_string=False)

      Return the GDAL color interpretation for this band.



   .. py:method:: data(data=None, offset=None, size=None, shape=None, as_memoryview=False)

      Read or writes pixel values for this band. Blocks of data can
      be accessed by specifying the width, height and offset of the
      desired block. The same specification can be used to update
      parts of a raster by providing an array of values.

      Allowed input data types are bytes, memoryview, list, tuple, and array.



.. py:class:: BandList(source)

   Bases: :py:obj:`list`


   Built-in mutable sequence.

   If no argument is given, the constructor creates a new empty list.
   The argument must be an iterable if specified.


   .. py:attribute:: source


