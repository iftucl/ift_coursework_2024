django.core.cache.backends.redis
================================

.. py:module:: django.core.cache.backends.redis

.. autoapi-nested-parse::

   Redis cache backend.



Classes
-------

.. autoapisummary::

   django.core.cache.backends.redis.RedisSerializer
   django.core.cache.backends.redis.RedisCacheClient
   django.core.cache.backends.redis.RedisCache


Module Contents
---------------

.. py:class:: RedisSerializer(protocol=None)

   .. py:attribute:: protocol
      :value: 5



   .. py:method:: dumps(obj)


   .. py:method:: loads(data)


.. py:class:: RedisCacheClient(servers, serializer=None, pool_class=None, parser_class=None, **options)

   .. py:method:: get_client(key=None, *, write=False)


   .. py:method:: add(key, value, timeout)


   .. py:method:: get(key, default)


   .. py:method:: set(key, value, timeout)


   .. py:method:: touch(key, timeout)


   .. py:method:: delete(key)


   .. py:method:: get_many(keys)


   .. py:method:: has_key(key)


   .. py:method:: incr(key, delta)


   .. py:method:: set_many(data, timeout)


   .. py:method:: delete_many(keys)


   .. py:method:: clear()


.. py:class:: RedisCache(server, params)

   Bases: :py:obj:`django.core.cache.backends.base.BaseCache`


   .. py:method:: get_backend_timeout(timeout=DEFAULT_TIMEOUT)


   .. py:method:: add(key, value, timeout=DEFAULT_TIMEOUT, version=None)


   .. py:method:: get(key, default=None, version=None)


   .. py:method:: set(key, value, timeout=DEFAULT_TIMEOUT, version=None)


   .. py:method:: touch(key, timeout=DEFAULT_TIMEOUT, version=None)


   .. py:method:: delete(key, version=None)


   .. py:method:: get_many(keys, version=None)


   .. py:method:: has_key(key, version=None)


   .. py:method:: incr(key, delta=1, version=None)


   .. py:method:: set_many(data, timeout=DEFAULT_TIMEOUT, version=None)


   .. py:method:: delete_many(keys, version=None)


   .. py:method:: clear()


