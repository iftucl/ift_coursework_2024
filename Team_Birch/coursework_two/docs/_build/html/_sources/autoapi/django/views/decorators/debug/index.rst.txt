django.views.decorators.debug
=============================

.. py:module:: django.views.decorators.debug


Functions
---------

.. autoapisummary::

   django.views.decorators.debug.sensitive_variables
   django.views.decorators.debug.sensitive_post_parameters


Module Contents
---------------

.. py:function:: sensitive_variables(*variables)

   Indicate which variables used in the decorated function are sensitive so
   that those variables can later be treated in a special way, for example
   by hiding them when logging unhandled exceptions.

   Accept two forms:

   * with specified variable names:

       @sensitive_variables('user', 'password', 'credit_card')
       def my_function(user):
           password = user.pass_word
           credit_card = user.credit_card_number
           ...

   * without any specified variable names, in which case consider all
     variables are sensitive:

       @sensitive_variables()
       def my_function()
           ...


.. py:function:: sensitive_post_parameters(*parameters)

   Indicate which POST parameters used in the decorated view are sensitive,
   so that those parameters can later be treated in a special way, for example
   by hiding them when logging unhandled exceptions.

   Accept two forms:

   * with specified parameters:

       @sensitive_post_parameters('password', 'credit_card')
       def my_view(request):
           pw = request.POST['password']
           cc = request.POST['credit_card']
           ...

   * without any specified parameters, in which case consider all
     variables are sensitive:

       @sensitive_post_parameters()
       def my_view(request)
           ...


