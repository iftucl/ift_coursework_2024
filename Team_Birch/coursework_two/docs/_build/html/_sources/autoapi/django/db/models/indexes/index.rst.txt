django.db.models.indexes
========================

.. py:module:: django.db.models.indexes


Classes
-------

.. autoapisummary::

   django.db.models.indexes.Index


Module Contents
---------------

.. py:class:: Index(*expressions, fields=(), name=None, db_tablespace=None, opclasses=(), condition=None, include=None)

   .. py:attribute:: suffix
      :value: 'idx'



   .. py:attribute:: max_name_length
      :value: 30



   .. py:attribute:: fields
      :value: []



   .. py:attribute:: fields_orders


   .. py:attribute:: name
      :value: ''



   .. py:attribute:: db_tablespace
      :value: None



   .. py:attribute:: opclasses
      :value: ()



   .. py:attribute:: condition
      :value: None



   .. py:attribute:: include
      :value: ()



   .. py:attribute:: expressions


   .. py:property:: contains_expressions


   .. py:method:: create_sql(model, schema_editor, using='', **kwargs)


   .. py:method:: remove_sql(model, schema_editor, **kwargs)


   .. py:method:: deconstruct()


   .. py:method:: clone()

      Create a copy of this Index.



   .. py:method:: set_name_with_model(model)

      Generate a unique name for the index.

      The name is divided into 3 parts - table name (12 chars), field name
      (8 chars) and unique hash + suffix (10 chars). Each part is made to
      fit its size by truncating the excess length.



