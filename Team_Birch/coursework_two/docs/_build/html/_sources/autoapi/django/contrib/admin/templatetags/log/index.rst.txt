django.contrib.admin.templatetags.log
=====================================

.. py:module:: django.contrib.admin.templatetags.log


Attributes
----------

.. autoapisummary::

   django.contrib.admin.templatetags.log.register


Classes
-------

.. autoapisummary::

   django.contrib.admin.templatetags.log.AdminLogNode


Functions
---------

.. autoapisummary::

   django.contrib.admin.templatetags.log.get_admin_log


Module Contents
---------------

.. py:data:: register

.. py:class:: AdminLogNode(limit, varname, user)

   Bases: :py:obj:`django.template.Node`


   .. py:method:: render(context)

      Return the node rendered as a string.



.. py:function:: get_admin_log(parser, token)

   Populate a template variable with the admin log for the given criteria.

   Usage::

       {% get_admin_log [limit] as [varname] for_user [context_var_with_user_obj] %}

   Examples::

       {% get_admin_log 10 as admin_log for_user 23 %}
       {% get_admin_log 10 as admin_log for_user user %}
       {% get_admin_log 10 as admin_log %}

   Note that ``context_var_containing_user_obj`` can be a hard-coded integer
   (user ID) or the name of a template context variable containing the user
   object whose ID you want.


