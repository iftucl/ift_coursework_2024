django.contrib.postgres.fields.ranges
=====================================

.. py:module:: django.contrib.postgres.fields.ranges


Classes
-------

.. autoapisummary::

   django.contrib.postgres.fields.ranges.RangeBoundary
   django.contrib.postgres.fields.ranges.RangeOperators
   django.contrib.postgres.fields.ranges.RangeField
   django.contrib.postgres.fields.ranges.IntegerRangeField
   django.contrib.postgres.fields.ranges.BigIntegerRangeField
   django.contrib.postgres.fields.ranges.DecimalRangeField
   django.contrib.postgres.fields.ranges.DateTimeRangeField
   django.contrib.postgres.fields.ranges.DateRangeField


Module Contents
---------------

.. py:class:: RangeBoundary(inclusive_lower=True, inclusive_upper=False)

   Bases: :py:obj:`django.db.models.Expression`


   A class that represents range boundaries.


   .. py:attribute:: lower
      :value: '['



   .. py:attribute:: upper
      :value: ')'



   .. py:method:: as_sql(compiler, connection)


.. py:class:: RangeOperators

   .. py:attribute:: EQUAL
      :value: '='



   .. py:attribute:: NOT_EQUAL
      :value: '<>'



   .. py:attribute:: CONTAINS
      :value: '@>'



   .. py:attribute:: CONTAINED_BY
      :value: '<@'



   .. py:attribute:: OVERLAPS
      :value: '&&'



   .. py:attribute:: FULLY_LT
      :value: '<<'



   .. py:attribute:: FULLY_GT
      :value: '>>'



   .. py:attribute:: NOT_LT
      :value: '&>'



   .. py:attribute:: NOT_GT
      :value: '&<'



   .. py:attribute:: ADJACENT_TO
      :value: '-|-'



.. py:class:: RangeField(*args, **kwargs)

   Bases: :py:obj:`django.db.models.Field`


   .. py:attribute:: empty_strings_allowed
      :value: False



   .. py:property:: model


   .. py:method:: get_placeholder(value, compiler, connection)


   .. py:method:: get_prep_value(value)


   .. py:method:: to_python(value)


   .. py:method:: set_attributes_from_name(name)


   .. py:method:: value_to_string(obj)


   .. py:method:: formfield(**kwargs)


.. py:class:: IntegerRangeField(*args, **kwargs)

   Bases: :py:obj:`RangeField`


   .. py:attribute:: base_field


   .. py:attribute:: range_type


   .. py:attribute:: form_field


   .. py:method:: db_type(connection)


.. py:class:: BigIntegerRangeField(*args, **kwargs)

   Bases: :py:obj:`RangeField`


   .. py:attribute:: base_field


   .. py:attribute:: range_type


   .. py:attribute:: form_field


   .. py:method:: db_type(connection)


.. py:class:: DecimalRangeField(*args, default_bounds=CANONICAL_RANGE_BOUNDS, **kwargs)

   Bases: :py:obj:`ContinuousRangeField`


   Continuous range field. It allows specifying default bounds for list and
   tuple inputs.


   .. py:attribute:: base_field


   .. py:attribute:: range_type


   .. py:attribute:: form_field


   .. py:method:: db_type(connection)


.. py:class:: DateTimeRangeField(*args, default_bounds=CANONICAL_RANGE_BOUNDS, **kwargs)

   Bases: :py:obj:`ContinuousRangeField`


   Continuous range field. It allows specifying default bounds for list and
   tuple inputs.


   .. py:attribute:: base_field


   .. py:attribute:: range_type


   .. py:attribute:: form_field


   .. py:method:: db_type(connection)


.. py:class:: DateRangeField(*args, **kwargs)

   Bases: :py:obj:`RangeField`


   .. py:attribute:: base_field


   .. py:attribute:: range_type


   .. py:attribute:: form_field


   .. py:method:: db_type(connection)


