django.contrib.auth
===================

.. py:module:: django.contrib.auth


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/django/contrib/auth/admin/index
   /autoapi/django/contrib/auth/apps/index
   /autoapi/django/contrib/auth/backends/index
   /autoapi/django/contrib/auth/base_user/index
   /autoapi/django/contrib/auth/checks/index
   /autoapi/django/contrib/auth/context_processors/index
   /autoapi/django/contrib/auth/decorators/index
   /autoapi/django/contrib/auth/forms/index
   /autoapi/django/contrib/auth/handlers/index
   /autoapi/django/contrib/auth/hashers/index
   /autoapi/django/contrib/auth/management/index
   /autoapi/django/contrib/auth/middleware/index
   /autoapi/django/contrib/auth/mixins/index
   /autoapi/django/contrib/auth/models/index
   /autoapi/django/contrib/auth/password_validation/index
   /autoapi/django/contrib/auth/signals/index
   /autoapi/django/contrib/auth/tokens/index
   /autoapi/django/contrib/auth/urls/index
   /autoapi/django/contrib/auth/validators/index
   /autoapi/django/contrib/auth/views/index


Attributes
----------

.. autoapisummary::

   django.contrib.auth.SESSION_KEY
   django.contrib.auth.BACKEND_SESSION_KEY
   django.contrib.auth.HASH_SESSION_KEY
   django.contrib.auth.REDIRECT_FIELD_NAME


Functions
---------

.. autoapisummary::

   django.contrib.auth.load_backend
   django.contrib.auth.get_backends
   django.contrib.auth.authenticate
   django.contrib.auth.login
   django.contrib.auth.logout
   django.contrib.auth.get_user_model
   django.contrib.auth.get_user
   django.contrib.auth.get_permission_codename
   django.contrib.auth.update_session_auth_hash


Package Contents
----------------

.. py:data:: SESSION_KEY
   :value: '_auth_user_id'


.. py:data:: BACKEND_SESSION_KEY
   :value: '_auth_user_backend'


.. py:data:: HASH_SESSION_KEY
   :value: '_auth_user_hash'


.. py:data:: REDIRECT_FIELD_NAME
   :value: 'next'


.. py:function:: load_backend(path)

.. py:function:: get_backends()

.. py:function:: authenticate(request=None, **credentials)

   If the given credentials are valid, return a User object.


.. py:function:: login(request, user, backend=None)

   Persist a user id and a backend in the request. This way a user doesn't
   have to reauthenticate on every request. Note that data set during
   the anonymous session is retained when the user logs in.


.. py:function:: logout(request)

   Remove the authenticated user's ID from the request and flush their session
   data.


.. py:function:: get_user_model()

   Return the User model that is active in this project.


.. py:function:: get_user(request)

   Return the user model instance associated with the given request session.
   If no user is retrieved, return an instance of `AnonymousUser`.


.. py:function:: get_permission_codename(action, opts)

   Return the codename of the permission for the specified action.


.. py:function:: update_session_auth_hash(request, user)

   Updating a user's password logs out all sessions for the user.

   Take the current request and the updated user object from which the new
   session hash will be derived and update the session hash appropriately to
   prevent a password change from logging out the session from which the
   password was changed.


