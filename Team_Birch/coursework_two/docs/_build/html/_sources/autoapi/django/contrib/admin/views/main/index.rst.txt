django.contrib.admin.views.main
===============================

.. py:module:: django.contrib.admin.views.main


Attributes
----------

.. autoapisummary::

   django.contrib.admin.views.main.ALL_VAR
   django.contrib.admin.views.main.ORDER_VAR
   django.contrib.admin.views.main.PAGE_VAR
   django.contrib.admin.views.main.SEARCH_VAR
   django.contrib.admin.views.main.ERROR_FLAG
   django.contrib.admin.views.main.IGNORED_PARAMS


Classes
-------

.. autoapisummary::

   django.contrib.admin.views.main.ChangeListSearchForm
   django.contrib.admin.views.main.ChangeList


Module Contents
---------------

.. py:data:: ALL_VAR
   :value: 'all'


.. py:data:: ORDER_VAR
   :value: 'o'


.. py:data:: PAGE_VAR
   :value: 'p'


.. py:data:: SEARCH_VAR
   :value: 'q'


.. py:data:: ERROR_FLAG
   :value: 'e'


.. py:data:: IGNORED_PARAMS

.. py:class:: ChangeListSearchForm(*args, **kwargs)

   Bases: :py:obj:`django.forms.Form`


   .. py:attribute:: fields


.. py:class:: ChangeList(request, model, list_display, list_display_links, list_filter, date_hierarchy, search_fields, list_select_related, list_per_page, list_max_show_all, list_editable, model_admin, sortable_by, search_help_text)

   .. py:attribute:: search_form_class


   .. py:attribute:: model


   .. py:attribute:: opts


   .. py:attribute:: lookup_opts


   .. py:attribute:: root_queryset


   .. py:attribute:: list_display


   .. py:attribute:: list_display_links


   .. py:attribute:: list_filter


   .. py:attribute:: has_filters
      :value: None



   .. py:attribute:: has_active_filters
      :value: None



   .. py:attribute:: clear_all_filters_qs
      :value: None



   .. py:attribute:: date_hierarchy


   .. py:attribute:: search_fields


   .. py:attribute:: list_select_related


   .. py:attribute:: list_per_page


   .. py:attribute:: list_max_show_all


   .. py:attribute:: model_admin


   .. py:attribute:: preserved_filters


   .. py:attribute:: sortable_by


   .. py:attribute:: search_help_text


   .. py:attribute:: query


   .. py:attribute:: show_all


   .. py:attribute:: is_popup


   .. py:attribute:: to_field


   .. py:attribute:: params


   .. py:attribute:: queryset


   .. py:attribute:: title


   .. py:attribute:: pk_attname


   .. py:method:: get_filters_params(params=None)

      Return all params except IGNORED_PARAMS.



   .. py:method:: get_filters(request)


   .. py:method:: get_query_string(new_params=None, remove=None)


   .. py:method:: get_results(request)


   .. py:method:: get_ordering_field(field_name)

      Return the proper model field name corresponding to the given
      field_name to use for ordering. field_name may either be the name of a
      proper model field or the name of a method (on the admin or model) or a
      callable with the 'admin_order_field' attribute. Return None if no
      proper model field name can be matched.



   .. py:method:: get_ordering(request, queryset)

      Return the list of ordering fields for the change list.
      First check the get_ordering() method in model admin, then check
      the object's default ordering. Then, any manually-specified ordering
      from the query string overrides anything. Finally, a deterministic
      order is guaranteed by calling _get_deterministic_ordering() with the
      constructed ordering.



   .. py:method:: get_ordering_field_columns()

      Return a dictionary of ordering field column numbers and asc/desc.



   .. py:method:: get_queryset(request)


   .. py:method:: apply_select_related(qs)


   .. py:method:: has_related_field_in_list_display()


   .. py:method:: url_for_result(result)


