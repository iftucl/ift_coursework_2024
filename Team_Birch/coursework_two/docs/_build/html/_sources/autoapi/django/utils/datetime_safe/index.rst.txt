django.utils.datetime_safe
==========================

.. py:module:: django.utils.datetime_safe


Classes
-------

.. autoapisummary::

   django.utils.datetime_safe.date
   django.utils.datetime_safe.datetime


Functions
---------

.. autoapisummary::

   django.utils.datetime_safe.new_date
   django.utils.datetime_safe.new_datetime
   django.utils.datetime_safe.strftime


Module Contents
---------------

.. py:class:: date

   Bases: :py:obj:`datetime.date`


   Concrete date type.

   Constructors:

   __new__()
   fromtimestamp()
   today()
   fromordinal()

   Operators:

   __repr__, __str__
   __eq__, __le__, __lt__, __ge__, __gt__, __hash__
   __add__, __radd__, __sub__ (add/radd only with timedelta arg)

   Methods:

   timetuple()
   toordinal()
   weekday()
   isoweekday(), isocalendar(), isoformat()
   ctime()
   strftime()

   Properties (readonly):
   year, month, day


   .. py:method:: strftime(fmt)

      Format using strftime().

      Example: "%d/%m/%Y, %H:%M:%S"



.. py:class:: datetime

   Bases: :py:obj:`datetime.datetime`


   datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])

   The year, month and day arguments are required. tzinfo may be None, or an
   instance of a tzinfo subclass. The remaining arguments may be ints.


   .. py:method:: strftime(fmt)

      Format using strftime().

      Example: "%d/%m/%Y, %H:%M:%S"



   .. py:method:: combine(date, time)
      :classmethod:


      Construct a datetime from a given date and a given time.



   .. py:method:: date()

      Return the date part.



.. py:function:: new_date(d)

   Generate a safe date from a datetime.date object.


.. py:function:: new_datetime(d)

   Generate a safe datetime from a datetime.date or datetime.datetime object.


.. py:function:: strftime(dt, fmt)

