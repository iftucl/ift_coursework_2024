django.contrib.gis.geos.mutable_list
====================================

.. py:module:: django.contrib.gis.geos.mutable_list

.. autoapi-nested-parse::

   This module contains a base type which provides list-style mutations
   without specific data storage methods.

   See also http://static.aryehleib.com/oldsite/MutableLists.html

   Author: Aryeh Leib Taurog.



Classes
-------

.. autoapisummary::

   django.contrib.gis.geos.mutable_list.ListMixin


Module Contents
---------------

.. py:class:: ListMixin(*args, **kwargs)

   A base class which provides complete list interface.
   Derived classes must call ListMixin's __init__() function
   and implement the following:

   function _get_single_external(self, i):
       Return single item with index i for general use.
       The index i will always satisfy 0 <= i < len(self).

   function _get_single_internal(self, i):
       Same as above, but for use within the class [Optional]
       Note that if _get_single_internal and _get_single_internal return
       different types of objects, _set_list must distinguish
       between the two and handle each appropriately.

   function _set_list(self, length, items):
       Recreate the entire object.

       NOTE: items may be a generator which calls _get_single_internal.
       Therefore, it is necessary to cache the values in a temporary:
           temp = list(items)
       before clobbering the original storage.

   function _set_single(self, i, value):
       Set the single item at index i to value [Optional]
       If left undefined, all mutations will result in rebuilding
       the object using _set_list.

   function __len__(self):
       Return the length

   int _minlength:
       The minimum legal length [Optional]

   int _maxlength:
       The maximum legal length [Optional]

   type or tuple _allowed:
       A type or tuple of allowed item types [Optional]


   .. py:method:: count(val)

      Standard list count method



   .. py:method:: index(val)

      Standard list index method



   .. py:method:: append(val)

      Standard list append method



   .. py:method:: extend(vals)

      Standard list extend method



   .. py:method:: insert(index, val)

      Standard list insert method



   .. py:method:: pop(index=-1)

      Standard list pop method



   .. py:method:: remove(val)

      Standard list remove method



   .. py:method:: reverse()

      Standard list reverse method



   .. py:method:: sort(key=None, reverse=False)

      Standard list sort method



