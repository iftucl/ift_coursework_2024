django.core.serializers.xml_serializer
======================================

.. py:module:: django.core.serializers.xml_serializer

.. autoapi-nested-parse::

   XML serializer.



Exceptions
----------

.. autoapisummary::

   django.core.serializers.xml_serializer.DefusedXmlException
   django.core.serializers.xml_serializer.DTDForbidden
   django.core.serializers.xml_serializer.EntitiesForbidden
   django.core.serializers.xml_serializer.ExternalReferenceForbidden


Classes
-------

.. autoapisummary::

   django.core.serializers.xml_serializer.Serializer
   django.core.serializers.xml_serializer.Deserializer
   django.core.serializers.xml_serializer.DefusedExpatParser


Functions
---------

.. autoapisummary::

   django.core.serializers.xml_serializer.getInnerText


Module Contents
---------------

.. py:class:: Serializer

   Bases: :py:obj:`django.core.serializers.base.Serializer`


   Serialize a QuerySet to XML.


   .. py:method:: indent(level)


   .. py:method:: start_serialization()

      Start serialization -- open the XML document and the root element.



   .. py:method:: end_serialization()

      End serialization -- end the document.



   .. py:method:: start_object(obj)

      Called as each object is handled.



   .. py:method:: end_object(obj)

      Called after handling all fields for an object.



   .. py:method:: handle_field(obj, field)

      Handle each field on an object (except for ForeignKeys and
      ManyToManyFields).



   .. py:method:: handle_fk_field(obj, field)

      Handle a ForeignKey (they need to be treated slightly
      differently from regular fields).



   .. py:method:: handle_m2m_field(obj, field)

      Handle a ManyToManyField. Related objects are only serialized as
      references to the object's PK (i.e. the related *data* is not dumped,
      just the relation).



.. py:class:: Deserializer(stream_or_string, *, using=DEFAULT_DB_ALIAS, ignorenonexistent=False, **options)

   Bases: :py:obj:`django.core.serializers.base.Deserializer`


   Deserialize XML.


   .. py:attribute:: handle_forward_references


   .. py:attribute:: event_stream


   .. py:attribute:: db


   .. py:attribute:: ignore
      :value: False



.. py:function:: getInnerText(node)

   Get all the inner text of a DOM node (recursively).


.. py:class:: DefusedExpatParser(*args, **kwargs)

   Bases: :py:obj:`xml.sax.expatreader.ExpatParser`


   An expat parser hardened against XML bomb attacks.

   Forbid DTDs, external entity references


   .. py:method:: start_doctype_decl(name, sysid, pubid, has_internal_subset)


   .. py:method:: entity_decl(name, is_parameter_entity, value, base, sysid, pubid, notation_name)


   .. py:method:: unparsed_entity_decl(name, base, sysid, pubid, notation_name)


   .. py:method:: external_entity_ref_handler(context, base, sysid, pubid)


   .. py:method:: reset()

      This method is called after close has been called to reset
      the parser so that it is ready to parse new documents. The
      results of calling parse or feed after close without calling
      reset are undefined.



.. py:exception:: DefusedXmlException

   Bases: :py:obj:`ValueError`


   Base exception.


.. py:exception:: DTDForbidden(name, sysid, pubid)

   Bases: :py:obj:`DefusedXmlException`


   Document type definition is forbidden.


   .. py:attribute:: name


   .. py:attribute:: sysid


   .. py:attribute:: pubid


.. py:exception:: EntitiesForbidden(name, value, base, sysid, pubid, notation_name)

   Bases: :py:obj:`DefusedXmlException`


   Entity definition is forbidden.


   .. py:attribute:: name


   .. py:attribute:: value


   .. py:attribute:: base


   .. py:attribute:: sysid


   .. py:attribute:: pubid


   .. py:attribute:: notation_name


.. py:exception:: ExternalReferenceForbidden(context, base, sysid, pubid)

   Bases: :py:obj:`DefusedXmlException`


   Resolving an external reference is forbidden.


   .. py:attribute:: context


   .. py:attribute:: base


   .. py:attribute:: sysid


   .. py:attribute:: pubid


