django.contrib.gis.geos.geometry
================================

.. py:module:: django.contrib.gis.geos.geometry

.. autoapi-nested-parse::

   This module contains the 'base' GEOSGeometry object -- all GEOS Geometries
   inherit from this object.



Classes
-------

.. autoapisummary::

   django.contrib.gis.geos.geometry.GEOSGeometryBase
   django.contrib.gis.geos.geometry.LinearGeometryMixin
   django.contrib.gis.geos.geometry.GEOSGeometry


Module Contents
---------------

.. py:class:: GEOSGeometryBase(ptr, cls)

   Bases: :py:obj:`django.contrib.gis.geos.base.GEOSBase`


   .. py:attribute:: ptr_type


   .. py:attribute:: destructor


   .. py:attribute:: has_cs
      :value: False



   .. py:method:: from_ewkt(ewkt)
      :staticmethod:



   .. py:method:: from_gml(gml_string)
      :classmethod:



   .. py:property:: coord_seq

      Return a clone of the coordinate sequence for this Geometry.


   .. py:property:: geom_type

      Return a string representing the Geometry type, e.g. 'Polygon'


   .. py:property:: geom_typeid

      Return an integer representing the Geometry type.


   .. py:property:: num_geom

      Return the number of geometries in the Geometry.


   .. py:property:: num_coords

      Return the number of coordinates in the Geometry.


   .. py:property:: num_points

      Return the number points, or coordinates, in the Geometry.


   .. py:property:: dims

      Return the dimension of this Geometry (0=point, 1=line, 2=surface).


   .. py:method:: normalize(clone=False)

      Convert this Geometry to normal form (or canonical form).
      If the `clone` keyword is set, then the geometry is not modified and a
      normalized clone of the geometry is returned instead.



   .. py:method:: make_valid()

      Attempt to create a valid representation of a given invalid geometry
      without losing any of the input vertices.



   .. py:property:: empty

      Return a boolean indicating whether the set of points in this Geometry
      are empty.


   .. py:property:: hasz

      Return whether the geometry has a 3D dimension.


   .. py:property:: ring

      Return whether or not the geometry is a ring.


   .. py:property:: simple

      Return false if the Geometry isn't simple.


   .. py:property:: valid

      Test the validity of this Geometry.


   .. py:property:: valid_reason

      Return a string containing the reason for any invalidity.


   .. py:method:: contains(other)

      Return true if other.within(this) returns true.



   .. py:method:: covers(other)

      Return True if the DE-9IM Intersection Matrix for the two geometries is
      T*****FF*, *T****FF*, ***T**FF*, or ****T*FF*. If either geometry is
      empty, return False.



   .. py:method:: crosses(other)

      Return true if the DE-9IM intersection matrix for the two Geometries
      is T*T****** (for a point and a curve,a point and an area or a line and
      an area) 0******** (for two curves).



   .. py:method:: disjoint(other)

      Return true if the DE-9IM intersection matrix for the two Geometries
      is FF*FF****.



   .. py:method:: equals(other)

      Return true if the DE-9IM intersection matrix for the two Geometries
      is T*F**FFF*.



   .. py:method:: equals_exact(other, tolerance=0)

      Return true if the two Geometries are exactly equal, up to a
      specified tolerance.



   .. py:method:: intersects(other)

      Return true if disjoint return false.



   .. py:method:: overlaps(other)

      Return true if the DE-9IM intersection matrix for the two Geometries
      is T*T***T** (for two points or two surfaces) 1*T***T** (for two curves).



   .. py:method:: relate_pattern(other, pattern)

      Return true if the elements in the DE-9IM intersection matrix for the
      two Geometries match the elements in pattern.



   .. py:method:: touches(other)

      Return true if the DE-9IM intersection matrix for the two Geometries
      is FT*******, F**T***** or F***T****.



   .. py:method:: within(other)

      Return true if the DE-9IM intersection matrix for the two Geometries
      is T*F**F***.



   .. py:property:: srid

      Get the SRID for the geometry. Return None if no SRID is set.


   .. py:property:: ewkt

      Return the EWKT (SRID + WKT) of the Geometry.


   .. py:property:: wkt

      Return the WKT (Well-Known Text) representation of this Geometry.


   .. py:property:: hex

      Return the WKB of this Geometry in hexadecimal form. Please note
      that the SRID is not included in this representation because it is not
      a part of the OGC specification (use the `hexewkb` property instead).


   .. py:property:: hexewkb

      Return the EWKB of this Geometry in hexadecimal form. This is an
      extension of the WKB specification that includes SRID value that are
      a part of this geometry.


   .. py:property:: json

      Return GeoJSON representation of this Geometry.


   .. py:attribute:: geojson


   .. py:property:: wkb

      Return the WKB (Well-Known Binary) representation of this Geometry
      as a Python memoryview. SRID and Z values are not included, use the
      `ewkb` property instead.


   .. py:property:: ewkb

      Return the EWKB representation of this Geometry as a Python memoryview.
      This is an extension of the WKB specification that includes any SRID
      value that are a part of this geometry.


   .. py:property:: kml

      Return the KML representation of this Geometry.


   .. py:property:: prepared

      Return a PreparedGeometry corresponding to this geometry -- it is
      optimized for the contains, intersects, and covers operations.


   .. py:property:: ogr

      Return the OGR Geometry for this Geometry.


   .. py:property:: srs

      Return the OSR SpatialReference for SRID of this Geometry.


   .. py:property:: crs

      Alias for `srs` property.


   .. py:method:: transform(ct, clone=False)

      Requires GDAL. Transform the geometry according to the given
      transformation object, which may be an integer SRID, and WKT or
      PROJ string. By default, transform the geometry in-place and return
      nothing. However if the `clone` keyword is set, don't modify the
      geometry and return a transformed clone instead.



   .. py:property:: boundary

      Return the boundary as a newly allocated Geometry object.


   .. py:method:: buffer(width, quadsegs=8)

      Return a geometry that represents all points whose distance from this
      Geometry is less than or equal to distance. Calculations are in the
      Spatial Reference System of this Geometry. The optional third parameter sets
      the number of segment used to approximate a quarter circle (defaults to 8).
      (Text from PostGIS documentation at ch. 6.1.3)



   .. py:method:: buffer_with_style(width, quadsegs=8, end_cap_style=1, join_style=1, mitre_limit=5.0)

      Same as buffer() but allows customizing the style of the memoryview.

      End cap style can be round (1), flat (2), or square (3).
      Join style can be round (1), mitre (2), or bevel (3).
      Mitre ratio limit only affects mitered join style.



   .. py:property:: centroid

      The centroid is equal to the centroid of the set of component Geometries
      of highest dimension (since the lower-dimension geometries contribute zero
      "weight" to the centroid).


   .. py:property:: convex_hull

      Return the smallest convex Polygon that contains all the points
      in the Geometry.


   .. py:method:: difference(other)

      Return a Geometry representing the points making up this Geometry
      that do not make up other.



   .. py:property:: envelope

      Return the envelope for this geometry (a polygon).


   .. py:method:: intersection(other)

      Return a Geometry representing the points shared by this Geometry and other.



   .. py:property:: point_on_surface

      Compute an interior point of this Geometry.


   .. py:method:: relate(other)

      Return the DE-9IM intersection matrix for this Geometry and the other.



   .. py:method:: simplify(tolerance=0.0, preserve_topology=False)

      Return the Geometry, simplified using the Douglas-Peucker algorithm
      to the specified tolerance (higher tolerance => less points).  If no
      tolerance provided, defaults to 0.

      By default, don't preserve topology - e.g. polygons can be split,
      collapse to lines or disappear holes can be created or disappear, and
      lines can cross. By specifying preserve_topology=True, the result will
      have the same dimension and number of components as the input. This is
      significantly slower.



   .. py:method:: sym_difference(other)

      Return a set combining the points in this Geometry not in other,
      and the points in other not in this Geometry.



   .. py:property:: unary_union

      Return the union of all the elements of this geometry.


   .. py:method:: union(other)

      Return a Geometry representing all the points in this Geometry and other.



   .. py:property:: area

      Return the area of the Geometry.


   .. py:method:: distance(other)

      Return the distance between the closest points on this Geometry
      and the other. Units will be in those of the coordinate system of
      the Geometry.



   .. py:property:: extent

      Return the extent of this geometry as a 4-tuple, consisting of
      (xmin, ymin, xmax, ymax).


   .. py:property:: length

      Return the length of this Geometry (e.g., 0 for point, or the
      circumference of a Polygon).


   .. py:method:: clone()

      Clone this Geometry.



.. py:class:: LinearGeometryMixin

   Used for LineString and MultiLineString.


   .. py:method:: interpolate(distance)


   .. py:method:: interpolate_normalized(distance)


   .. py:method:: project(point)


   .. py:method:: project_normalized(point)


   .. py:property:: merged

      Return the line merge of this Geometry.


   .. py:property:: closed

      Return whether or not this Geometry is closed.


.. py:class:: GEOSGeometry(geo_input, srid=None)

   Bases: :py:obj:`GEOSGeometryBase`, :py:obj:`django.contrib.gis.geos.mutable_list.ListMixin`


   A class that, generally, encapsulates a GEOS geometry.


