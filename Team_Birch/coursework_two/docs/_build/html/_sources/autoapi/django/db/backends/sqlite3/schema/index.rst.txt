django.db.backends.sqlite3.schema
=================================

.. py:module:: django.db.backends.sqlite3.schema


Classes
-------

.. autoapisummary::

   django.db.backends.sqlite3.schema.DatabaseSchemaEditor


Module Contents
---------------

.. py:class:: DatabaseSchemaEditor

   Bases: :py:obj:`django.db.backends.base.schema.BaseDatabaseSchemaEditor`


   .. py:attribute:: sql_delete_table
      :value: 'DROP TABLE %(table)s'



   .. py:attribute:: sql_create_fk
      :value: None



   .. py:attribute:: sql_create_inline_fk
      :value: 'REFERENCES %(to_table)s (%(to_column)s) DEFERRABLE INITIALLY DEFERRED'



   .. py:attribute:: sql_create_column_inline_fk
      :value: 'REFERENCES %(to_table)s (%(to_column)s) DEFERRABLE INITIALLY DEFERRED'



   .. py:attribute:: sql_delete_column
      :value: 'ALTER TABLE %(table)s DROP COLUMN %(column)s'



   .. py:attribute:: sql_create_unique
      :value: 'CREATE UNIQUE INDEX %(name)s ON %(table)s (%(columns)s)'



   .. py:attribute:: sql_delete_unique
      :value: 'DROP INDEX %(name)s'



   .. py:attribute:: sql_alter_table_comment
      :value: None



   .. py:attribute:: sql_alter_column_comment
      :value: None



   .. py:method:: quote_value(value)


   .. py:method:: prepare_default(value)


   .. py:method:: alter_db_table(model, old_db_table, new_db_table, disable_constraints=True)


   .. py:method:: alter_field(model, old_field, new_field, strict=False)


   .. py:method:: delete_model(model, handle_autom2m=True)


   .. py:method:: add_field(model, field)

      Create a field on a model.



   .. py:method:: remove_field(model, field)

      Remove a field from a model. Usually involves deleting a column,
      but for M2Ms may involve deleting a table.



   .. py:method:: add_constraint(model, constraint)


   .. py:method:: remove_constraint(model, constraint)


