django.template.smartif
=======================

.. py:module:: django.template.smartif

.. autoapi-nested-parse::

   Parser and utilities for the smart 'if' tag



Attributes
----------

.. autoapisummary::

   django.template.smartif.OPERATORS
   django.template.smartif.EndToken


Classes
-------

.. autoapisummary::

   django.template.smartif.TokenBase
   django.template.smartif.Literal
   django.template.smartif.EndToken
   django.template.smartif.IfParser


Functions
---------

.. autoapisummary::

   django.template.smartif.infix
   django.template.smartif.prefix


Module Contents
---------------

.. py:class:: TokenBase

   Base class for operators and literals, mainly for debugging and for throwing
   syntax errors.


   .. py:attribute:: id
      :value: None



   .. py:attribute:: value
      :value: None



   .. py:method:: nud(parser)


   .. py:method:: led(left, parser)


   .. py:method:: display()

      Return what to display in error messages for this node



.. py:function:: infix(bp, func)

   Create an infix operator, given a binding power and a function that
   evaluates the node.


.. py:function:: prefix(bp, func)

   Create a prefix operator, given a binding power and a function that
   evaluates the node.


.. py:data:: OPERATORS

.. py:class:: Literal(value)

   Bases: :py:obj:`TokenBase`


   A basic self-resolvable object similar to a Django template variable.


   .. py:attribute:: id
      :value: 'literal'



   .. py:attribute:: lbp
      :value: 0



   .. py:attribute:: value


   .. py:method:: display()

      Return what to display in error messages for this node



   .. py:method:: nud(parser)


   .. py:method:: eval(context)


.. py:class:: EndToken

   Bases: :py:obj:`TokenBase`


   Base class for operators and literals, mainly for debugging and for throwing
   syntax errors.


   .. py:attribute:: lbp
      :value: 0



   .. py:method:: nud(parser)


.. py:data:: EndToken

.. py:class:: IfParser(tokens)

   .. py:attribute:: error_class


   .. py:attribute:: tokens
      :value: []



   .. py:attribute:: pos
      :value: 0



   .. py:attribute:: current_token


   .. py:method:: translate_token(token)


   .. py:method:: next_token()


   .. py:method:: parse()


   .. py:method:: expression(rbp=0)


   .. py:method:: create_var(value)


