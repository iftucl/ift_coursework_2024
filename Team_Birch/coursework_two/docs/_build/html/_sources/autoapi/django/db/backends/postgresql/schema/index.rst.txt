django.db.backends.postgresql.schema
====================================

.. py:module:: django.db.backends.postgresql.schema


Classes
-------

.. autoapisummary::

   django.db.backends.postgresql.schema.DatabaseSchemaEditor


Module Contents
---------------

.. py:class:: DatabaseSchemaEditor

   Bases: :py:obj:`django.db.backends.base.schema.BaseDatabaseSchemaEditor`


   .. py:attribute:: sql_update_with_default
      :value: 'UPDATE %(table)s SET %(column)s = %(default)s WHERE %(column)s IS NULL; SET CONSTRAINTS ALL IMMEDIATE'



   .. py:attribute:: sql_alter_sequence_type
      :value: 'ALTER SEQUENCE IF EXISTS %(sequence)s AS %(type)s'



   .. py:attribute:: sql_delete_sequence
      :value: 'DROP SEQUENCE IF EXISTS %(sequence)s CASCADE'



   .. py:attribute:: sql_create_index
      :value: 'CREATE INDEX %(name)s ON %(table)s%(using)s (%(columns)s)%(include)s%(extra)s%(condition)s'



   .. py:attribute:: sql_create_index_concurrently
      :value: 'CREATE INDEX CONCURRENTLY %(name)s ON %(table)s%(using)s (%(columns)s)%(include)s%(extra)s%(condition)s'



   .. py:attribute:: sql_delete_index
      :value: 'DROP INDEX IF EXISTS %(name)s'



   .. py:attribute:: sql_delete_index_concurrently
      :value: 'DROP INDEX CONCURRENTLY IF EXISTS %(name)s'



   .. py:attribute:: sql_create_column_inline_fk
      :value: 'CONSTRAINT %(name)s REFERENCES %(to_table)s(%(to_column)s)%(deferrable)s; SET CONSTRAINTS...



   .. py:attribute:: sql_delete_fk
      :value: 'SET CONSTRAINTS %(name)s IMMEDIATE; ALTER TABLE %(table)s DROP CONSTRAINT %(name)s'



   .. py:attribute:: sql_delete_procedure
      :value: 'DROP FUNCTION %(procedure)s(%(param_types)s)'



   .. py:method:: execute(sql, params=())


   .. py:attribute:: sql_add_identity
      :value: 'ALTER TABLE %(table)s ALTER COLUMN %(column)s ADD GENERATED BY DEFAULT AS IDENTITY'



   .. py:attribute:: sql_drop_indentity
      :value: 'ALTER TABLE %(table)s ALTER COLUMN %(column)s DROP IDENTITY IF EXISTS'



   .. py:method:: quote_value(value)


   .. py:method:: add_index(model, index, concurrently=False)


   .. py:method:: remove_index(model, index, concurrently=False)


