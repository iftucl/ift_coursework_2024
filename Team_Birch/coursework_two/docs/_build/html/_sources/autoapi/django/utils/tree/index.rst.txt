django.utils.tree
=================

.. py:module:: django.utils.tree

.. autoapi-nested-parse::

   A class for storing a tree graph. Primarily used for filter constructs in the
   ORM.



Classes
-------

.. autoapisummary::

   django.utils.tree.Node


Module Contents
---------------

.. py:class:: Node(children=None, connector=None, negated=False)

   A single internal node in the tree graph. A Node should be viewed as a
   connection (the root) with the children being either leaf nodes or other
   Node instances.


   .. py:attribute:: default
      :value: 'DEFAULT'



   .. py:attribute:: children
      :value: []



   .. py:attribute:: connector
      :value: 'DEFAULT'



   .. py:attribute:: negated
      :value: False



   .. py:method:: create(children=None, connector=None, negated=False)
      :classmethod:


      Create a new instance using Node() instead of __init__() as some
      subclasses, e.g. django.db.models.query_utils.Q, may implement a custom
      __init__() with a signature that conflicts with the one defined in
      Node.__init__().



   .. py:attribute:: copy


   .. py:method:: add(data, conn_type)

      Combine this tree and the data represented by data using the
      connector conn_type. The combine is done by squashing the node other
      away if possible.

      This tree (self) will never be pushed to a child node of the
      combined tree, nor will the connector or negated properties change.

      Return a node which can be used in place of data regardless if the
      node other got squashed or not.



   .. py:method:: negate()

      Negate the sense of the root connector.



