django.urls.base
================

.. py:module:: django.urls.base


Attributes
----------

.. autoapisummary::

   django.urls.base.reverse_lazy


Functions
---------

.. autoapisummary::

   django.urls.base.resolve
   django.urls.base.reverse
   django.urls.base.clear_url_caches
   django.urls.base.set_script_prefix
   django.urls.base.get_script_prefix
   django.urls.base.clear_script_prefix
   django.urls.base.set_urlconf
   django.urls.base.get_urlconf
   django.urls.base.is_valid_path
   django.urls.base.translate_url


Module Contents
---------------

.. py:function:: resolve(path, urlconf=None)

.. py:function:: reverse(viewname, urlconf=None, args=None, kwargs=None, current_app=None)

.. py:data:: reverse_lazy

.. py:function:: clear_url_caches()

.. py:function:: set_script_prefix(prefix)

   Set the script prefix for the current thread.


.. py:function:: get_script_prefix()

   Return the currently active script prefix. Useful for client code that
   wishes to construct their own URLs manually (although accessing the request
   instance is normally going to be a lot cleaner).


.. py:function:: clear_script_prefix()

   Unset the script prefix for the current thread.


.. py:function:: set_urlconf(urlconf_name)

   Set the URLconf for the current thread (overriding the default one in
   settings). If urlconf_name is None, revert back to the default.


.. py:function:: get_urlconf(default=None)

   Return the root URLconf to use for the current thread if it has been
   changed from the default one.


.. py:function:: is_valid_path(path, urlconf=None)

   Return the ResolverMatch if the given path resolves against the default URL
   resolver, False otherwise. This is a convenience method to make working
   with "is this a match?" cases easier, avoiding try...except blocks.


.. py:function:: translate_url(url, lang_code)

   Given a URL (absolute or relative), try to get its translated version in
   the `lang_code` language (either by i18n_patterns or by translated regex).
   Return the original URL if no translated version is found.


