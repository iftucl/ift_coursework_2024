django.contrib.admin.views.autocomplete
=======================================

.. py:module:: django.contrib.admin.views.autocomplete


Classes
-------

.. autoapisummary::

   django.contrib.admin.views.autocomplete.AutocompleteJsonView


Module Contents
---------------

.. py:class:: AutocompleteJsonView

   Bases: :py:obj:`django.views.generic.list.BaseListView`


   Handle AutocompleteWidget's AJAX requests for data.


   .. py:attribute:: paginate_by
      :value: 20



   .. py:attribute:: admin_site
      :value: None



   .. py:method:: get(request, *args, **kwargs)

      Return a JsonResponse with search results as defined in
      serialize_result(), by default:
      {
          results: [{id: "123" text: "foo"}],
          pagination: {more: true}
      }



   .. py:method:: serialize_result(obj, to_field_name)

      Convert the provided model object to a dictionary that is added to the
      results list.



   .. py:method:: get_paginator(*args, **kwargs)

      Use the ModelAdmin's paginator.



   .. py:method:: get_queryset()

      Return queryset based on ModelAdmin.get_search_results().



   .. py:method:: process_request(request)

      Validate request integrity, extract and return request parameters.

      Since the subsequent view permission check requires the target model
      admin, which is determined here, raise PermissionDenied if the
      requested app, model or field are malformed.

      Raise Http404 if the target model admin is not configured properly with
      search_fields.



   .. py:method:: has_perm(request, obj=None)

      Check if user has permission to access the related model.



