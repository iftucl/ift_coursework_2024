django.contrib.gis.db.backends.oracle.schema
============================================

.. py:module:: django.contrib.gis.db.backends.oracle.schema


Classes
-------

.. autoapisummary::

   django.contrib.gis.db.backends.oracle.schema.OracleGISSchemaEditor


Module Contents
---------------

.. py:class:: OracleGISSchemaEditor(*args, **kwargs)

   Bases: :py:obj:`django.db.backends.oracle.schema.DatabaseSchemaEditor`


   .. py:attribute:: sql_add_geometry_metadata
      :value: Multiline-String

      .. raw:: html

         <details><summary>Show Value</summary>

      .. code-block:: python

         """
                 INSERT INTO USER_SDO_GEOM_METADATA
                     ("TABLE_NAME", "COLUMN_NAME", "DIMINFO", "SRID")
                 VALUES (
                     %(table)s,
                     %(column)s,
                     MDSYS.SDO_DIM_ARRAY(
                         MDSYS.SDO_DIM_ELEMENT('LONG', %(dim0)s, %(dim2)s, %(tolerance)s),
                         MDSYS.SDO_DIM_ELEMENT('LAT', %(dim1)s, %(dim3)s, %(tolerance)s)
                     ),
                     %(srid)s
                 )"""

      .. raw:: html

         </details>




   .. py:attribute:: sql_add_spatial_index
      :value: 'CREATE INDEX %(index)s ON %(table)s(%(column)s) INDEXTYPE IS MDSYS.SPATIAL_INDEX'



   .. py:attribute:: sql_drop_spatial_index
      :value: 'DROP INDEX %(index)s'



   .. py:attribute:: sql_clear_geometry_table_metadata
      :value: 'DELETE FROM USER_SDO_GEOM_METADATA WHERE TABLE_NAME = %(table)s'



   .. py:attribute:: sql_clear_geometry_field_metadata
      :value: 'DELETE FROM USER_SDO_GEOM_METADATA WHERE TABLE_NAME = %(table)s AND COLUMN_NAME = %(column)s'



   .. py:attribute:: geometry_sql
      :value: []



   .. py:method:: geo_quote_name(name)


   .. py:method:: quote_value(value)


   .. py:method:: column_sql(model, field, include_default=False)


   .. py:method:: create_model(model)


   .. py:method:: delete_model(model)


   .. py:method:: add_field(model, field)


   .. py:method:: remove_field(model, field)


   .. py:method:: run_geometry_sql()


