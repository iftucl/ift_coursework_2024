django.core.handlers.base
=========================

.. py:module:: django.core.handlers.base


Attributes
----------

.. autoapisummary::

   django.core.handlers.base.logger


Classes
-------

.. autoapisummary::

   django.core.handlers.base.BaseHandler


Functions
---------

.. autoapisummary::

   django.core.handlers.base.reset_urlconf


Module Contents
---------------

.. py:data:: logger

.. py:class:: BaseHandler

   .. py:method:: load_middleware(is_async=False)

      Populate middleware lists from settings.MIDDLEWARE.

      Must be called after the environment is fixed (see __call__ in subclasses).



   .. py:method:: adapt_method_mode(is_async, method, method_is_async=None, debug=False, name=None)

      Adapt a method to be in the correct "mode":
      - If is_async is False:
        - Synchronous methods are left alone
        - Asynchronous methods are wrapped with async_to_sync
      - If is_async is True:
        - Synchronous methods are wrapped with sync_to_async()
        - Asynchronous methods are left alone



   .. py:method:: get_response(request)

      Return an HttpResponse object for the given HttpRequest.



   .. py:method:: get_response_async(request)
      :async:


      Asynchronous version of get_response.

      Funneling everything, including WSGI, into a single async
      get_response() is too slow. Avoid the context switch by using
      a separate async response path.



   .. py:method:: resolve_request(request)

      Retrieve/set the urlconf for the request. Return the view resolved,
      with its args and kwargs.



   .. py:method:: check_response(response, callback, name=None)

      Raise an error if the view returned None or an uncalled coroutine.



   .. py:method:: make_view_atomic(view)


   .. py:method:: process_exception_by_middleware(exception, request)

      Pass the exception to the exception middleware. If no middleware
      return a response for this exception, return None.



.. py:function:: reset_urlconf(sender, **kwargs)

   Reset the URLconf after each request is finished.


