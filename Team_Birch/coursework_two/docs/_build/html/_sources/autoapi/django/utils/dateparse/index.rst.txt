django.utils.dateparse
======================

.. py:module:: django.utils.dateparse

.. autoapi-nested-parse::

   Functions to parse datetime objects.



Attributes
----------

.. autoapisummary::

   django.utils.dateparse.date_re
   django.utils.dateparse.time_re
   django.utils.dateparse.datetime_re
   django.utils.dateparse.standard_duration_re
   django.utils.dateparse.iso8601_duration_re
   django.utils.dateparse.postgres_interval_re


Functions
---------

.. autoapisummary::

   django.utils.dateparse.parse_date
   django.utils.dateparse.parse_time
   django.utils.dateparse.parse_datetime
   django.utils.dateparse.parse_duration


Module Contents
---------------

.. py:data:: date_re

.. py:data:: time_re

.. py:data:: datetime_re

.. py:data:: standard_duration_re

.. py:data:: iso8601_duration_re

.. py:data:: postgres_interval_re

.. py:function:: parse_date(value)

   Parse a string and return a datetime.date.

   Raise ValueError if the input is well formatted but not a valid date.
   Return None if the input isn't well formatted.


.. py:function:: parse_time(value)

   Parse a string and return a datetime.time.

   This function doesn't support time zone offsets.

   Raise ValueError if the input is well formatted but not a valid time.
   Return None if the input isn't well formatted, in particular if it
   contains an offset.


.. py:function:: parse_datetime(value)

   Parse a string and return a datetime.datetime.

   This function supports time zone offsets. When the input contains one,
   the output uses a timezone with a fixed offset from UTC.

   Raise ValueError if the input is well formatted but not a valid datetime.
   Return None if the input isn't well formatted.


.. py:function:: parse_duration(value)

   Parse a duration string and return a datetime.timedelta.

   The preferred format for durations in Django is '%d %H:%M:%S.%f'.

   Also supports ISO 8601 representation and PostgreSQL's day-time interval
   format.


