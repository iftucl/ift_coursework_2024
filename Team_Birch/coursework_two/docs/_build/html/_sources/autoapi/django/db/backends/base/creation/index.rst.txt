django.db.backends.base.creation
================================

.. py:module:: django.db.backends.base.creation


Attributes
----------

.. autoapisummary::

   django.db.backends.base.creation.TEST_DATABASE_PREFIX


Classes
-------

.. autoapisummary::

   django.db.backends.base.creation.BaseDatabaseCreation


Module Contents
---------------

.. py:data:: TEST_DATABASE_PREFIX
   :value: 'test_'


.. py:class:: BaseDatabaseCreation(connection)

   Encapsulate backend-specific differences pertaining to creation and
   destruction of the test database.


   .. py:attribute:: connection


   .. py:method:: log(msg)


   .. py:method:: create_test_db(verbosity=1, autoclobber=False, serialize=True, keepdb=False)

      Create a test database, prompting the user for confirmation if the
      database already exists. Return the name of the test database created.



   .. py:method:: set_as_test_mirror(primary_settings_dict)

      Set this database up to be used in testing as a mirror of a primary
      database whose settings are given.



   .. py:method:: serialize_db_to_string()

      Serialize all data in the database into a JSON string.
      Designed only for test runner usage; will not handle large
      amounts of data.



   .. py:method:: deserialize_db_from_string(data)

      Reload the database with data from a string generated by
      the serialize_db_to_string() method.



   .. py:method:: clone_test_db(suffix, verbosity=1, autoclobber=False, keepdb=False)

      Clone a test database.



   .. py:method:: get_test_db_clone_settings(suffix)

      Return a modified connection settings dict for the n-th clone of a DB.



   .. py:method:: destroy_test_db(old_database_name=None, verbosity=1, keepdb=False, suffix=None)

      Destroy a test database, prompting the user for confirmation if the
      database already exists.



   .. py:method:: mark_expected_failures_and_skips()

      Mark tests in Django's test suite which are expected failures on this
      database and test which should be skipped on this database.



   .. py:method:: sql_table_creation_suffix()

      SQL to append to the end of the test table creation statements.



   .. py:method:: test_db_signature()

      Return a tuple with elements of self.connection.settings_dict (a
      DATABASES setting value) that uniquely identify a database
      accordingly to the RDBMS particularities.



   .. py:method:: setup_worker_connection(_worker_id)


