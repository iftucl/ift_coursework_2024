django.contrib.gis.geoip2.base
==============================

.. py:module:: django.contrib.gis.geoip2.base


Attributes
----------

.. autoapisummary::

   django.contrib.gis.geoip2.base.GEOIP_SETTINGS


Exceptions
----------

.. autoapisummary::

   django.contrib.gis.geoip2.base.GeoIP2Exception


Classes
-------

.. autoapisummary::

   django.contrib.gis.geoip2.base.GeoIP2


Module Contents
---------------

.. py:data:: GEOIP_SETTINGS

.. py:exception:: GeoIP2Exception

   Bases: :py:obj:`Exception`


   Common base class for all non-exit exceptions.


.. py:class:: GeoIP2(path=None, cache=0, country=None, city=None)

   .. py:attribute:: MODE_AUTO
      :value: 0



   .. py:attribute:: MODE_MMAP_EXT
      :value: 1



   .. py:attribute:: MODE_MMAP
      :value: 2



   .. py:attribute:: MODE_FILE
      :value: 4



   .. py:attribute:: MODE_MEMORY
      :value: 8



   .. py:attribute:: cache_options


   .. py:method:: city(query)

      Return a dictionary of city information for the given IP address or
      Fully Qualified Domain Name (FQDN). Some information in the dictionary
      may be undefined (None).



   .. py:method:: country_code(query)

      Return the country code for the given IP Address or FQDN.



   .. py:method:: country_name(query)

      Return the country name for the given IP Address or FQDN.



   .. py:method:: country(query)

      Return a dictionary with the country code and name when given an
      IP address or a Fully Qualified Domain Name (FQDN). For example, both
      '24.124.1.80' and 'djangoproject.com' are valid parameters.



   .. py:method:: coords(query, ordering=('longitude', 'latitude'))


   .. py:method:: lon_lat(query)

      Return a tuple of the (longitude, latitude) for the given query.



   .. py:method:: lat_lon(query)

      Return a tuple of the (latitude, longitude) for the given query.



   .. py:method:: geos(query)

      Return a GEOS Point object for the given query.



   .. py:property:: info

      Return information about the GeoIP library and databases in use.


   .. py:method:: open(full_path, cache)
      :classmethod:



