django.db.backends.oracle.schema
================================

.. py:module:: django.db.backends.oracle.schema


Classes
-------

.. autoapisummary::

   django.db.backends.oracle.schema.DatabaseSchemaEditor


Module Contents
---------------

.. py:class:: DatabaseSchemaEditor

   Bases: :py:obj:`django.db.backends.base.schema.BaseDatabaseSchemaEditor`


   .. py:attribute:: sql_create_column
      :value: 'ALTER TABLE %(table)s ADD %(column)s %(definition)s'



   .. py:attribute:: sql_alter_column_type
      :value: 'MODIFY %(column)s %(type)s%(collation)s'



   .. py:attribute:: sql_alter_column_null
      :value: 'MODIFY %(column)s NULL'



   .. py:attribute:: sql_alter_column_not_null
      :value: 'MODIFY %(column)s NOT NULL'



   .. py:attribute:: sql_alter_column_default
      :value: 'MODIFY %(column)s DEFAULT %(default)s'



   .. py:attribute:: sql_alter_column_no_default
      :value: 'MODIFY %(column)s DEFAULT NULL'



   .. py:attribute:: sql_alter_column_no_default_null
      :value: 'MODIFY %(column)s DEFAULT NULL'



   .. py:attribute:: sql_delete_column
      :value: 'ALTER TABLE %(table)s DROP COLUMN %(column)s'



   .. py:attribute:: sql_create_column_inline_fk
      :value: 'CONSTRAINT %(name)s REFERENCES %(to_table)s(%(to_column)s)%(deferrable)s'



   .. py:attribute:: sql_delete_table
      :value: 'DROP TABLE %(table)s CASCADE CONSTRAINTS'



   .. py:attribute:: sql_create_index
      :value: 'CREATE INDEX %(name)s ON %(table)s (%(columns)s)%(extra)s'



   .. py:method:: quote_value(value)


   .. py:method:: remove_field(model, field)


   .. py:method:: delete_model(model)


   .. py:method:: alter_field(model, old_field, new_field, strict=False)


   .. py:method:: normalize_name(name)

      Get the properly shortened and uppercased identifier as returned by
      quote_name() but without the quotes.



   .. py:method:: prepare_default(value)


