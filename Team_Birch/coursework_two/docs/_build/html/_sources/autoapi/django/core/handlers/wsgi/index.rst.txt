django.core.handlers.wsgi
=========================

.. py:module:: django.core.handlers.wsgi


Classes
-------

.. autoapisummary::

   django.core.handlers.wsgi.LimitedStream
   django.core.handlers.wsgi.WSGIRequest
   django.core.handlers.wsgi.WSGIHandler


Functions
---------

.. autoapisummary::

   django.core.handlers.wsgi.get_path_info
   django.core.handlers.wsgi.get_script_name
   django.core.handlers.wsgi.get_bytes_from_wsgi
   django.core.handlers.wsgi.get_str_from_wsgi


Module Contents
---------------

.. py:class:: LimitedStream(stream, limit)

   Bases: :py:obj:`io.IOBase`


   Wrap another stream to disallow reading it past a number of bytes.

   Based on the implementation from werkzeug.wsgi.LimitedStream
   See https://github.com/pallets/werkzeug/blob/dbf78f67/src/werkzeug/wsgi.py#L828


   .. py:attribute:: limit


   .. py:method:: read(size=-1, /)


   .. py:method:: readline(size=-1, /)

      Read and return a line from the stream.

      If size is specified, at most size bytes will be read.

      The line terminator is always b'\n' for binary files; for text
      files, the newlines argument to open can be used to select the line
      terminator(s) recognized.



.. py:class:: WSGIRequest(environ)

   Bases: :py:obj:`django.http.HttpRequest`


   .. py:attribute:: environ


   .. py:attribute:: path_info


   .. py:attribute:: path


   .. py:attribute:: META


   .. py:attribute:: method


   .. py:attribute:: resolver_match
      :value: None



   .. py:method:: GET()


   .. py:method:: COOKIES()


   .. py:property:: FILES


   .. py:attribute:: POST


.. py:class:: WSGIHandler(*args, **kwargs)

   Bases: :py:obj:`django.core.handlers.base.BaseHandler`


   .. py:attribute:: request_class


.. py:function:: get_path_info(environ)

   Return the HTTP request's PATH_INFO as a string.


.. py:function:: get_script_name(environ)

   Return the equivalent of the HTTP request's SCRIPT_NAME environment
   variable. If Apache mod_rewrite is used, return what would have been
   the script name prior to any rewriting (so it's the script name as seen
   from the client's perspective), unless the FORCE_SCRIPT_NAME setting is
   set (to anything).


.. py:function:: get_bytes_from_wsgi(environ, key, default)

   Get a value from the WSGI environ dictionary as bytes.

   key and default should be strings.


.. py:function:: get_str_from_wsgi(environ, key, default)

   Get a value from the WSGI environ dictionary as str.

   key and default should be str objects.


