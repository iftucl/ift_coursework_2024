django.contrib.messages.storage.base
====================================

.. py:module:: django.contrib.messages.storage.base


Attributes
----------

.. autoapisummary::

   django.contrib.messages.storage.base.LEVEL_TAGS


Classes
-------

.. autoapisummary::

   django.contrib.messages.storage.base.Message
   django.contrib.messages.storage.base.BaseStorage


Module Contents
---------------

.. py:data:: LEVEL_TAGS

.. py:class:: Message(level, message, extra_tags=None)

   Represent an actual message that can be stored in any of the supported
   storage classes (typically session- or cookie-based) and rendered in a view
   or template.


   .. py:attribute:: level


   .. py:attribute:: message


   .. py:attribute:: extra_tags
      :value: None



   .. py:property:: tags


   .. py:property:: level_tag


.. py:class:: BaseStorage(request, *args, **kwargs)

   This is the base backend for temporary message storage.

   This is not a complete class; to be a usable storage backend, it must be
   subclassed and the two methods ``_get`` and ``_store`` overridden.


   .. py:attribute:: request


   .. py:attribute:: used
      :value: False



   .. py:attribute:: added_new
      :value: False



   .. py:method:: update(response)

      Store all unread messages.

      If the backend has yet to be iterated, store previously stored messages
      again. Otherwise, only store messages added after the last iteration.



   .. py:method:: add(level, message, extra_tags='')

      Queue a message to be stored.

      The message is only queued if it contained something and its level is
      not less than the recording level (``self.level``).



   .. py:attribute:: level


