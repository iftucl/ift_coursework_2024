django.db.models.sql.datastructures
===================================

.. py:module:: django.db.models.sql.datastructures

.. autoapi-nested-parse::

   Useful auxiliary data structures for query construction. Not useful outside
   the SQL domain.



Exceptions
----------

.. autoapisummary::

   django.db.models.sql.datastructures.MultiJoin


Classes
-------

.. autoapisummary::

   django.db.models.sql.datastructures.Empty
   django.db.models.sql.datastructures.Join
   django.db.models.sql.datastructures.BaseTable


Module Contents
---------------

.. py:exception:: MultiJoin(names_pos, path_with_names)

   Bases: :py:obj:`Exception`


   Used by join construction code to indicate the point at which a
   multi-valued join was attempted (if the caller wants to treat that
   exceptionally).


   .. py:attribute:: level


   .. py:attribute:: names_with_path


.. py:class:: Empty

.. py:class:: Join(table_name, parent_alias, table_alias, join_type, join_field, nullable, filtered_relation=None)

   Used by sql.Query and sql.SQLCompiler to generate JOIN clauses into the
   FROM entry. For example, the SQL generated could be
       LEFT OUTER JOIN "sometable" T1
       ON ("othertable"."sometable_id" = "sometable"."id")

   This class is primarily used in Query.alias_map. All entries in alias_map
   must be Join compatible by providing the following attributes and methods:
       - table_name (string)
       - table_alias (possible alias for the table, can be None)
       - join_type (can be None for those entries that aren't joined from
         anything)
       - parent_alias (which table is this join's parent, can be None similarly
         to join_type)
       - as_sql()
       - relabeled_clone()


   .. py:attribute:: table_name


   .. py:attribute:: parent_alias


   .. py:attribute:: table_alias


   .. py:attribute:: join_type


   .. py:attribute:: join_cols


   .. py:attribute:: join_field


   .. py:attribute:: nullable


   .. py:attribute:: filtered_relation
      :value: None



   .. py:method:: as_sql(compiler, connection)

      Generate the full
         LEFT OUTER JOIN sometable ON sometable.somecol = othertable.othercol, params
      clause for this join.



   .. py:method:: relabeled_clone(change_map)


   .. py:property:: identity


   .. py:method:: equals(other)


   .. py:method:: demote()


   .. py:method:: promote()


.. py:class:: BaseTable(table_name, alias)

   The BaseTable class is used for base table references in FROM clause. For
   example, the SQL "foo" in
       SELECT * FROM "foo" WHERE somecond
   could be generated by this class.


   .. py:attribute:: join_type
      :value: None



   .. py:attribute:: parent_alias
      :value: None



   .. py:attribute:: filtered_relation
      :value: None



   .. py:attribute:: table_name


   .. py:attribute:: table_alias


   .. py:method:: as_sql(compiler, connection)


   .. py:method:: relabeled_clone(change_map)


   .. py:property:: identity


   .. py:method:: equals(other)


