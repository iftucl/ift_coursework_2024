django.contrib.staticfiles.management.commands.collectstatic
============================================================

.. py:module:: django.contrib.staticfiles.management.commands.collectstatic


Classes
-------

.. autoapisummary::

   django.contrib.staticfiles.management.commands.collectstatic.Command


Module Contents
---------------

.. py:class:: Command(*args, **kwargs)

   Bases: :py:obj:`django.core.management.base.BaseCommand`


   Copies or symlinks static files from different locations to the
   settings.STATIC_ROOT.


   .. py:attribute:: help
      :value: 'Collect static files in a single location.'



   .. py:attribute:: requires_system_checks


   .. py:attribute:: copied_files
      :value: []



   .. py:attribute:: symlinked_files
      :value: []



   .. py:attribute:: unmodified_files
      :value: []



   .. py:attribute:: post_processed_files
      :value: []



   .. py:attribute:: storage


   .. py:attribute:: style


   .. py:method:: local()


   .. py:method:: add_arguments(parser)

      Entry point for subclassed commands to add custom arguments.



   .. py:method:: set_options(**options)

      Set instance variables based on an options dict



   .. py:method:: collect()

      Perform the bulk of the work of collectstatic.

      Split off from handle() to facilitate testing.



   .. py:method:: handle(**options)

      The actual logic of the command. Subclasses must implement
      this method.



   .. py:method:: log(msg, level=2)

      Small log helper



   .. py:method:: is_local_storage()


   .. py:method:: clear_dir(path)

      Delete the given relative path using the destination storage backend.



   .. py:method:: delete_file(path, prefixed_path, source_storage)

      Check if the target file should be deleted if it already exists.



   .. py:method:: link_file(path, prefixed_path, source_storage)

      Attempt to link ``path``



   .. py:method:: copy_file(path, prefixed_path, source_storage)

      Attempt to copy ``path`` with storage



