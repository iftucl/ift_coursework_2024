django.views.generic.dates
==========================

.. py:module:: django.views.generic.dates


Classes
-------

.. autoapisummary::

   django.views.generic.dates.YearMixin
   django.views.generic.dates.MonthMixin
   django.views.generic.dates.DayMixin
   django.views.generic.dates.WeekMixin
   django.views.generic.dates.DateMixin
   django.views.generic.dates.BaseDateListView
   django.views.generic.dates.BaseArchiveIndexView
   django.views.generic.dates.ArchiveIndexView
   django.views.generic.dates.BaseYearArchiveView
   django.views.generic.dates.YearArchiveView
   django.views.generic.dates.BaseMonthArchiveView
   django.views.generic.dates.MonthArchiveView
   django.views.generic.dates.BaseWeekArchiveView
   django.views.generic.dates.WeekArchiveView
   django.views.generic.dates.BaseDayArchiveView
   django.views.generic.dates.DayArchiveView
   django.views.generic.dates.BaseTodayArchiveView
   django.views.generic.dates.TodayArchiveView
   django.views.generic.dates.BaseDateDetailView
   django.views.generic.dates.DateDetailView


Functions
---------

.. autoapisummary::

   django.views.generic.dates.timezone_today


Module Contents
---------------

.. py:class:: YearMixin

   Mixin for views manipulating year-based data.


   .. py:attribute:: year_format
      :value: '%Y'



   .. py:attribute:: year
      :value: None



   .. py:method:: get_year_format()

      Get a year format string in strptime syntax to be used to parse the
      year from url variables.



   .. py:method:: get_year()

      Return the year for which this view should display data.



   .. py:method:: get_next_year(date)

      Get the next valid year.



   .. py:method:: get_previous_year(date)

      Get the previous valid year.



.. py:class:: MonthMixin

   Mixin for views manipulating month-based data.


   .. py:attribute:: month_format
      :value: '%b'



   .. py:attribute:: month
      :value: None



   .. py:method:: get_month_format()

      Get a month format string in strptime syntax to be used to parse the
      month from url variables.



   .. py:method:: get_month()

      Return the month for which this view should display data.



   .. py:method:: get_next_month(date)

      Get the next valid month.



   .. py:method:: get_previous_month(date)

      Get the previous valid month.



.. py:class:: DayMixin

   Mixin for views manipulating day-based data.


   .. py:attribute:: day_format
      :value: '%d'



   .. py:attribute:: day
      :value: None



   .. py:method:: get_day_format()

      Get a day format string in strptime syntax to be used to parse the day
      from url variables.



   .. py:method:: get_day()

      Return the day for which this view should display data.



   .. py:method:: get_next_day(date)

      Get the next valid day.



   .. py:method:: get_previous_day(date)

      Get the previous valid day.



.. py:class:: WeekMixin

   Mixin for views manipulating week-based data.


   .. py:attribute:: week_format
      :value: '%U'



   .. py:attribute:: week
      :value: None



   .. py:method:: get_week_format()

      Get a week format string in strptime syntax to be used to parse the
      week from url variables.



   .. py:method:: get_week()

      Return the week for which this view should display data.



   .. py:method:: get_next_week(date)

      Get the next valid week.



   .. py:method:: get_previous_week(date)

      Get the previous valid week.



.. py:class:: DateMixin

   Mixin class for views manipulating date-based data.


   .. py:attribute:: date_field
      :value: None



   .. py:attribute:: allow_future
      :value: False



   .. py:method:: get_date_field()

      Get the name of the date field to be used to filter by.



   .. py:method:: get_allow_future()

      Return `True` if the view should be allowed to display objects from
      the future.



   .. py:method:: uses_datetime_field()

      Return `True` if the date field is a `DateTimeField` and `False`
      if it's a `DateField`.



.. py:class:: BaseDateListView

   Bases: :py:obj:`django.views.generic.list.MultipleObjectMixin`, :py:obj:`DateMixin`, :py:obj:`django.views.generic.base.View`


   Abstract base class for date-based views displaying a list of objects.


   .. py:attribute:: allow_empty
      :value: False



   .. py:attribute:: date_list_period
      :value: 'year'



   .. py:method:: get(request, *args, **kwargs)


   .. py:method:: get_dated_items()
      :abstractmethod:


      Obtain the list of dates and items.



   .. py:method:: get_ordering()

      Return the field or fields to use for ordering the queryset; use the
      date field by default.



   .. py:method:: get_dated_queryset(**lookup)

      Get a queryset properly filtered according to `allow_future` and any
      extra lookup kwargs.



   .. py:method:: get_date_list_period()

      Get the aggregation period for the list of dates: 'year', 'month', or
      'day'.



   .. py:method:: get_date_list(queryset, date_type=None, ordering='ASC')

      Get a date list by calling `queryset.dates/datetimes()`, checking
      along the way for empty lists that aren't allowed.



.. py:class:: BaseArchiveIndexView

   Bases: :py:obj:`BaseDateListView`


   Base class for archives of date-based items. Requires a response mixin.


   .. py:attribute:: context_object_name
      :value: 'latest'



   .. py:method:: get_dated_items()

      Return (date_list, items, extra_context) for this request.



.. py:class:: ArchiveIndexView

   Bases: :py:obj:`django.views.generic.list.MultipleObjectTemplateResponseMixin`, :py:obj:`BaseArchiveIndexView`


   Top-level archive of date-based items.


   .. py:attribute:: template_name_suffix
      :value: '_archive'



.. py:class:: BaseYearArchiveView

   Bases: :py:obj:`YearMixin`, :py:obj:`BaseDateListView`


   List of objects published in a given year.


   .. py:attribute:: date_list_period
      :value: 'month'



   .. py:attribute:: make_object_list
      :value: False



   .. py:method:: get_dated_items()

      Return (date_list, items, extra_context) for this request.



   .. py:method:: get_make_object_list()

      Return `True` if this view should contain the full list of objects in
      the given year.



.. py:class:: YearArchiveView

   Bases: :py:obj:`django.views.generic.list.MultipleObjectTemplateResponseMixin`, :py:obj:`BaseYearArchiveView`


   List of objects published in a given year.


   .. py:attribute:: template_name_suffix
      :value: '_archive_year'



.. py:class:: BaseMonthArchiveView

   Bases: :py:obj:`YearMixin`, :py:obj:`MonthMixin`, :py:obj:`BaseDateListView`


   List of objects published in a given month.


   .. py:attribute:: date_list_period
      :value: 'day'



   .. py:method:: get_dated_items()

      Return (date_list, items, extra_context) for this request.



.. py:class:: MonthArchiveView

   Bases: :py:obj:`django.views.generic.list.MultipleObjectTemplateResponseMixin`, :py:obj:`BaseMonthArchiveView`


   List of objects published in a given month.


   .. py:attribute:: template_name_suffix
      :value: '_archive_month'



.. py:class:: BaseWeekArchiveView

   Bases: :py:obj:`YearMixin`, :py:obj:`WeekMixin`, :py:obj:`BaseDateListView`


   List of objects published in a given week.


   .. py:method:: get_dated_items()

      Return (date_list, items, extra_context) for this request.



.. py:class:: WeekArchiveView

   Bases: :py:obj:`django.views.generic.list.MultipleObjectTemplateResponseMixin`, :py:obj:`BaseWeekArchiveView`


   List of objects published in a given week.


   .. py:attribute:: template_name_suffix
      :value: '_archive_week'



.. py:class:: BaseDayArchiveView

   Bases: :py:obj:`YearMixin`, :py:obj:`MonthMixin`, :py:obj:`DayMixin`, :py:obj:`BaseDateListView`


   List of objects published on a given day.


   .. py:method:: get_dated_items()

      Return (date_list, items, extra_context) for this request.



.. py:class:: DayArchiveView

   Bases: :py:obj:`django.views.generic.list.MultipleObjectTemplateResponseMixin`, :py:obj:`BaseDayArchiveView`


   List of objects published on a given day.


   .. py:attribute:: template_name_suffix
      :value: '_archive_day'



.. py:class:: BaseTodayArchiveView

   Bases: :py:obj:`BaseDayArchiveView`


   List of objects published today.


   .. py:method:: get_dated_items()

      Return (date_list, items, extra_context) for this request.



.. py:class:: TodayArchiveView

   Bases: :py:obj:`django.views.generic.list.MultipleObjectTemplateResponseMixin`, :py:obj:`BaseTodayArchiveView`


   List of objects published today.


   .. py:attribute:: template_name_suffix
      :value: '_archive_day'



.. py:class:: BaseDateDetailView

   Bases: :py:obj:`YearMixin`, :py:obj:`MonthMixin`, :py:obj:`DayMixin`, :py:obj:`DateMixin`, :py:obj:`django.views.generic.detail.BaseDetailView`


   Detail view of a single object on a single date; this differs from the
   standard DetailView by accepting a year/month/day in the URL.


   .. py:method:: get_object(queryset=None)

      Get the object this request displays.



.. py:class:: DateDetailView

   Bases: :py:obj:`django.views.generic.detail.SingleObjectTemplateResponseMixin`, :py:obj:`BaseDateDetailView`


   Detail view of a single object on a single date; this differs from the
   standard DetailView by accepting a year/month/day in the URL.


   .. py:attribute:: template_name_suffix
      :value: '_detail'



.. py:function:: timezone_today()

   Return the current date in the current time zone.


