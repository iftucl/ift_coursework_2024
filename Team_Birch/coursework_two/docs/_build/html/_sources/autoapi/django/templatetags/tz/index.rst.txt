django.templatetags.tz
======================

.. py:module:: django.templatetags.tz


Attributes
----------

.. autoapisummary::

   django.templatetags.tz.register


Exceptions
----------

.. autoapisummary::

   django.templatetags.tz.UnknownTimezoneException


Classes
-------

.. autoapisummary::

   django.templatetags.tz.datetimeobject
   django.templatetags.tz.LocalTimeNode
   django.templatetags.tz.TimezoneNode
   django.templatetags.tz.GetCurrentTimezoneNode


Functions
---------

.. autoapisummary::

   django.templatetags.tz.timezone_constructor
   django.templatetags.tz.localtime
   django.templatetags.tz.utc
   django.templatetags.tz.do_timezone
   django.templatetags.tz.localtime_tag
   django.templatetags.tz.timezone_tag
   django.templatetags.tz.get_current_timezone_tag


Module Contents
---------------

.. py:data:: register

.. py:exception:: UnknownTimezoneException

   Bases: :py:obj:`BaseException`


   Common base class for all exceptions


.. py:function:: timezone_constructor(tzname)

.. py:class:: datetimeobject

   Bases: :py:obj:`datetime.datetime`


   datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])

   The year, month and day arguments are required. tzinfo may be None, or an
   instance of a tzinfo subclass. The remaining arguments may be ints.


.. py:function:: localtime(value)

   Convert a datetime to local time in the active time zone.

   This only makes sense within a {% localtime off %} block.


.. py:function:: utc(value)

   Convert a datetime to UTC.


.. py:function:: do_timezone(value, arg)

   Convert a datetime to local time in a given time zone.

   The argument must be an instance of a tzinfo subclass or a time zone name.

   Naive datetimes are assumed to be in local time in the default time zone.


.. py:class:: LocalTimeNode(nodelist, use_tz)

   Bases: :py:obj:`django.template.Node`


   Template node class used by ``localtime_tag``.


   .. py:attribute:: nodelist


   .. py:attribute:: use_tz


   .. py:method:: render(context)


.. py:class:: TimezoneNode(nodelist, tz)

   Bases: :py:obj:`django.template.Node`


   Template node class used by ``timezone_tag``.


   .. py:attribute:: nodelist


   .. py:attribute:: tz


   .. py:method:: render(context)


.. py:class:: GetCurrentTimezoneNode(variable)

   Bases: :py:obj:`django.template.Node`


   Template node class used by ``get_current_timezone_tag``.


   .. py:attribute:: variable


   .. py:method:: render(context)


.. py:function:: localtime_tag(parser, token)

   Force or prevent conversion of datetime objects to local time,
   regardless of the value of ``settings.USE_TZ``.

   Sample usage::

       {% localtime off %}{{ value_in_utc }}{% endlocaltime %}


.. py:function:: timezone_tag(parser, token)

   Enable a given time zone just for this block.

   The ``timezone`` argument must be an instance of a ``tzinfo`` subclass, a
   time zone name, or ``None``. If it is ``None``, the default time zone is
   used within the block.

   Sample usage::

       {% timezone "Europe/Paris" %}
           It is {{ now }} in Paris.
       {% endtimezone %}


.. py:function:: get_current_timezone_tag(parser, token)

   Store the name of the current time zone in the context.

   Usage::

       {% get_current_timezone as TIME_ZONE %}

   This will fetch the currently active time zone and put its name
   into the ``TIME_ZONE`` context variable.


