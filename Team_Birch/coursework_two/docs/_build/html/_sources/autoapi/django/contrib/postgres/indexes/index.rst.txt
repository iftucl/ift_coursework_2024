django.contrib.postgres.indexes
===============================

.. py:module:: django.contrib.postgres.indexes


Classes
-------

.. autoapisummary::

   django.contrib.postgres.indexes.BloomIndex
   django.contrib.postgres.indexes.BrinIndex
   django.contrib.postgres.indexes.BTreeIndex
   django.contrib.postgres.indexes.GinIndex
   django.contrib.postgres.indexes.GistIndex
   django.contrib.postgres.indexes.HashIndex
   django.contrib.postgres.indexes.SpGistIndex


Module Contents
---------------

.. py:class:: BloomIndex(*expressions, length=None, columns=(), **kwargs)

   Bases: :py:obj:`PostgresIndex`


   .. py:attribute:: suffix
      :value: 'bloom'



   .. py:attribute:: length
      :value: None



   .. py:attribute:: columns
      :value: ()



   .. py:method:: deconstruct()


   .. py:method:: get_with_params()


.. py:class:: BrinIndex(*expressions, autosummarize=None, pages_per_range=None, **kwargs)

   Bases: :py:obj:`PostgresIndex`


   .. py:attribute:: suffix
      :value: 'brin'



   .. py:attribute:: autosummarize
      :value: None



   .. py:attribute:: pages_per_range
      :value: None



   .. py:method:: deconstruct()


   .. py:method:: get_with_params()


.. py:class:: BTreeIndex(*expressions, fillfactor=None, **kwargs)

   Bases: :py:obj:`PostgresIndex`


   .. py:attribute:: suffix
      :value: 'btree'



   .. py:attribute:: fillfactor
      :value: None



   .. py:method:: deconstruct()


   .. py:method:: get_with_params()


.. py:class:: GinIndex(*expressions, fastupdate=None, gin_pending_list_limit=None, **kwargs)

   Bases: :py:obj:`PostgresIndex`


   .. py:attribute:: suffix
      :value: 'gin'



   .. py:attribute:: fastupdate
      :value: None



   .. py:attribute:: gin_pending_list_limit
      :value: None



   .. py:method:: deconstruct()


   .. py:method:: get_with_params()


.. py:class:: GistIndex(*expressions, buffering=None, fillfactor=None, **kwargs)

   Bases: :py:obj:`PostgresIndex`


   .. py:attribute:: suffix
      :value: 'gist'



   .. py:attribute:: buffering
      :value: None



   .. py:attribute:: fillfactor
      :value: None



   .. py:method:: deconstruct()


   .. py:method:: get_with_params()


.. py:class:: HashIndex(*expressions, fillfactor=None, **kwargs)

   Bases: :py:obj:`PostgresIndex`


   .. py:attribute:: suffix
      :value: 'hash'



   .. py:attribute:: fillfactor
      :value: None



   .. py:method:: deconstruct()


   .. py:method:: get_with_params()


.. py:class:: SpGistIndex(*expressions, fillfactor=None, **kwargs)

   Bases: :py:obj:`PostgresIndex`


   .. py:attribute:: suffix
      :value: 'spgist'



   .. py:attribute:: fillfactor
      :value: None



   .. py:method:: deconstruct()


   .. py:method:: get_with_params()


   .. py:method:: check_supported(schema_editor)


