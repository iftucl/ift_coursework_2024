django.urls.resolvers
=====================

.. py:module:: django.urls.resolvers

.. autoapi-nested-parse::

   This module converts requested URLs to callback view functions.

   URLResolver is the main class here. Its resolve() method takes a URL (as
   a string) and returns a ResolverMatch object which provides access to all
   attributes of the resolved URL match.



Classes
-------

.. autoapisummary::

   django.urls.resolvers.ResolverMatch
   django.urls.resolvers.LocaleRegexDescriptor
   django.urls.resolvers.CheckURLMixin
   django.urls.resolvers.RegexPattern
   django.urls.resolvers.RoutePattern
   django.urls.resolvers.LocalePrefixPattern
   django.urls.resolvers.URLPattern
   django.urls.resolvers.URLResolver


Functions
---------

.. autoapisummary::

   django.urls.resolvers.get_resolver
   django.urls.resolvers.get_ns_resolver


Module Contents
---------------

.. py:class:: ResolverMatch(func, args, kwargs, url_name=None, app_names=None, namespaces=None, route=None, tried=None, captured_kwargs=None, extra_kwargs=None)

   .. py:attribute:: func


   .. py:attribute:: args


   .. py:attribute:: kwargs


   .. py:attribute:: url_name
      :value: None



   .. py:attribute:: route
      :value: None



   .. py:attribute:: tried
      :value: None



   .. py:attribute:: captured_kwargs
      :value: None



   .. py:attribute:: extra_kwargs
      :value: None



   .. py:attribute:: app_names
      :value: []



   .. py:attribute:: app_name
      :value: ''



   .. py:attribute:: namespaces
      :value: []



   .. py:attribute:: namespace
      :value: ''



   .. py:attribute:: view_name
      :value: ''



.. py:function:: get_resolver(urlconf=None)

.. py:function:: get_ns_resolver(ns_pattern, resolver, converters)

.. py:class:: LocaleRegexDescriptor(attr)

   .. py:attribute:: attr


.. py:class:: CheckURLMixin

   .. py:method:: describe()

      Format the URL pattern for display in warning messages.



.. py:class:: RegexPattern(regex, name=None, is_endpoint=False)

   Bases: :py:obj:`CheckURLMixin`


   .. py:attribute:: regex


   .. py:attribute:: name
      :value: None



   .. py:attribute:: converters


   .. py:method:: match(path)


   .. py:method:: check()


.. py:class:: RoutePattern(route, name=None, is_endpoint=False)

   Bases: :py:obj:`CheckURLMixin`


   .. py:attribute:: regex


   .. py:attribute:: name
      :value: None



   .. py:attribute:: converters


   .. py:method:: match(path)


   .. py:method:: check()


.. py:class:: LocalePrefixPattern(prefix_default_language=True)

   .. py:attribute:: prefix_default_language
      :value: True



   .. py:attribute:: converters


   .. py:property:: regex


   .. py:property:: language_prefix


   .. py:method:: match(path)


   .. py:method:: check()


   .. py:method:: describe()


.. py:class:: URLPattern(pattern, callback, default_args=None, name=None)

   .. py:attribute:: pattern


   .. py:attribute:: callback


   .. py:attribute:: default_args


   .. py:attribute:: name
      :value: None



   .. py:method:: check()


   .. py:method:: resolve(path)


   .. py:method:: lookup_str()

      A string that identifies the view (e.g. 'path.to.view_function' or
      'path.to.ClassBasedView').



.. py:class:: URLResolver(pattern, urlconf_name, default_kwargs=None, app_name=None, namespace=None)

   .. py:attribute:: pattern


   .. py:attribute:: urlconf_name


   .. py:attribute:: callback
      :value: None



   .. py:attribute:: default_kwargs


   .. py:attribute:: namespace
      :value: None



   .. py:attribute:: app_name
      :value: None



   .. py:method:: check()


   .. py:property:: reverse_dict


   .. py:property:: namespace_dict


   .. py:property:: app_dict


   .. py:method:: resolve(path)


   .. py:method:: urlconf_module()


   .. py:method:: url_patterns()


   .. py:method:: resolve_error_handler(view_type)


   .. py:method:: reverse(lookup_view, *args, **kwargs)


