django.db.backends.utils
========================

.. py:module:: django.db.backends.utils


Attributes
----------

.. autoapisummary::

   django.db.backends.utils.logger


Classes
-------

.. autoapisummary::

   django.db.backends.utils.CursorWrapper
   django.db.backends.utils.CursorDebugWrapper


Functions
---------

.. autoapisummary::

   django.db.backends.utils.debug_transaction
   django.db.backends.utils.split_tzname_delta
   django.db.backends.utils.typecast_date
   django.db.backends.utils.typecast_time
   django.db.backends.utils.typecast_timestamp
   django.db.backends.utils.split_identifier
   django.db.backends.utils.truncate_name
   django.db.backends.utils.names_digest
   django.db.backends.utils.format_number
   django.db.backends.utils.strip_quotes


Module Contents
---------------

.. py:data:: logger

.. py:class:: CursorWrapper(cursor, db)

   .. py:attribute:: cursor


   .. py:attribute:: db


   .. py:attribute:: WRAP_ERROR_ATTRS


   .. py:method:: callproc(procname, params=None, kparams=None)


   .. py:method:: execute(sql, params=None)


   .. py:method:: executemany(sql, param_list)


.. py:class:: CursorDebugWrapper(cursor, db)

   Bases: :py:obj:`CursorWrapper`


   .. py:method:: execute(sql, params=None)


   .. py:method:: executemany(sql, param_list)


   .. py:method:: debug_sql(sql=None, params=None, use_last_executed_query=False, many=False)


.. py:function:: debug_transaction(connection, sql)

.. py:function:: split_tzname_delta(tzname)

   Split a time zone name into a 3-tuple of (name, sign, offset).


.. py:function:: typecast_date(s)

.. py:function:: typecast_time(s)

.. py:function:: typecast_timestamp(s)

.. py:function:: split_identifier(identifier)

   Split an SQL identifier into a two element tuple of (namespace, name).

   The identifier could be a table, column, or sequence name might be prefixed
   by a namespace.


.. py:function:: truncate_name(identifier, length=None, hash_len=4)

   Shorten an SQL identifier to a repeatable mangled version with the given
   length.

   If a quote stripped name contains a namespace, e.g. USERNAME"."TABLE,
   truncate the table portion only.


.. py:function:: names_digest(*args, length)

   Generate a 32-bit digest of a set of arguments that can be used to shorten
   identifying names.


.. py:function:: format_number(value, max_digits, decimal_places)

   Format a number into a string with the requisite number of digits and
   decimal places.


.. py:function:: strip_quotes(table_name)

   Strip quotes off of quoted table names to make them safe for use in index
   names, sequence names, etc. For example '"USER"."TABLE"' (an Oracle naming
   scheme) becomes 'USER"."TABLE'.


