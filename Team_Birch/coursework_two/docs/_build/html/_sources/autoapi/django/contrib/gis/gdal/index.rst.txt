django.contrib.gis.gdal
=======================

.. py:module:: django.contrib.gis.gdal

.. autoapi-nested-parse::

   This module houses ctypes interfaces for GDAL objects.  The following GDAL
   objects are supported:

   CoordTransform: Used for coordinate transformations from one spatial
    reference system to another.

   Driver: Wraps an OGR data source driver.

   DataSource: Wrapper for the OGR data source object, supports
    OGR-supported data sources.

   Envelope: A ctypes structure for bounding boxes (GDAL library
    not required).

   OGRGeometry: Object for accessing OGR Geometry functionality.

   OGRGeomType: A class for representing the different OGR Geometry
    types (GDAL library not required).

   SpatialReference: Represents OSR Spatial Reference objects.

   The GDAL library will be imported from the system path using the default
   library name for the current OS. The default library path may be overridden
   by setting `GDAL_LIBRARY_PATH` in your settings with the path to the GDAL C
   library on your system.



Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/django/contrib/gis/gdal/base/index
   /autoapi/django/contrib/gis/gdal/datasource/index
   /autoapi/django/contrib/gis/gdal/driver/index
   /autoapi/django/contrib/gis/gdal/envelope/index
   /autoapi/django/contrib/gis/gdal/error/index
   /autoapi/django/contrib/gis/gdal/feature/index
   /autoapi/django/contrib/gis/gdal/field/index
   /autoapi/django/contrib/gis/gdal/geometries/index
   /autoapi/django/contrib/gis/gdal/geomtype/index
   /autoapi/django/contrib/gis/gdal/layer/index
   /autoapi/django/contrib/gis/gdal/libgdal/index
   /autoapi/django/contrib/gis/gdal/prototypes/index
   /autoapi/django/contrib/gis/gdal/raster/index
   /autoapi/django/contrib/gis/gdal/srs/index


