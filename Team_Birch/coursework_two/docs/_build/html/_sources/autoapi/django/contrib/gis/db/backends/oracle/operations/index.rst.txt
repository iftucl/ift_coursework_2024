django.contrib.gis.db.backends.oracle.operations
================================================

.. py:module:: django.contrib.gis.db.backends.oracle.operations

.. autoapi-nested-parse::

   This module contains the spatial lookup types, and the `get_geo_where_clause`
   routine for Oracle Spatial.

   Please note that WKT support is broken on the XE version, and thus
   this backend will not work on such platforms.  Specifically, XE lacks
   support for an internal JVM, and Java libraries are required to use
   the WKT constructors.



Attributes
----------

.. autoapisummary::

   django.contrib.gis.db.backends.oracle.operations.DEFAULT_TOLERANCE


Classes
-------

.. autoapisummary::

   django.contrib.gis.db.backends.oracle.operations.SDOOperator
   django.contrib.gis.db.backends.oracle.operations.SDODWithin
   django.contrib.gis.db.backends.oracle.operations.SDODisjoint
   django.contrib.gis.db.backends.oracle.operations.SDORelate
   django.contrib.gis.db.backends.oracle.operations.OracleOperations


Module Contents
---------------

.. py:data:: DEFAULT_TOLERANCE
   :value: '0.05'


.. py:class:: SDOOperator(op=None, func=None)

   Bases: :py:obj:`django.contrib.gis.db.backends.utils.SpatialOperator`


   Class encapsulating the behavior specific to a GIS operation (used by lookups).


   .. py:attribute:: sql_template
      :value: "%(func)s(%(lhs)s, %(rhs)s) = 'TRUE'"



.. py:class:: SDODWithin(op=None, func=None)

   Bases: :py:obj:`django.contrib.gis.db.backends.utils.SpatialOperator`


   Class encapsulating the behavior specific to a GIS operation (used by lookups).


   .. py:attribute:: sql_template
      :value: "SDO_WITHIN_DISTANCE(%(lhs)s, %(rhs)s, %%s) = 'TRUE'"



.. py:class:: SDODisjoint(op=None, func=None)

   Bases: :py:obj:`django.contrib.gis.db.backends.utils.SpatialOperator`


   Class encapsulating the behavior specific to a GIS operation (used by lookups).


   .. py:attribute:: sql_template
      :value: "SDO_GEOM.RELATE(%(lhs)s, 'DISJOINT', %(rhs)s, 0.05) = 'DISJOINT'"



.. py:class:: SDORelate(op=None, func=None)

   Bases: :py:obj:`django.contrib.gis.db.backends.utils.SpatialOperator`


   Class encapsulating the behavior specific to a GIS operation (used by lookups).


   .. py:attribute:: sql_template
      :value: "SDO_RELATE(%(lhs)s, %(rhs)s, 'mask=%(mask)s') = 'TRUE'"



   .. py:method:: check_relate_argument(arg)


   .. py:method:: as_sql(connection, lookup, template_params, sql_params)


.. py:class:: OracleOperations

   Bases: :py:obj:`django.contrib.gis.db.backends.base.operations.BaseSpatialOperations`, :py:obj:`django.db.backends.oracle.operations.DatabaseOperations`


   .. py:attribute:: name
      :value: 'oracle'



   .. py:attribute:: oracle
      :value: True



   .. py:attribute:: disallowed_aggregates


   .. py:attribute:: Adapter


   .. py:attribute:: extent
      :value: 'SDO_AGGR_MBR'



   .. py:attribute:: unionagg
      :value: 'SDO_AGGR_UNION'



   .. py:attribute:: from_text
      :value: 'SDO_GEOMETRY'



   .. py:attribute:: function_names


   .. py:attribute:: select
      :value: 'SDO_UTIL.TO_WKBGEOMETRY(%s)'



   .. py:attribute:: gis_operators


   .. py:attribute:: unsupported_functions


   .. py:method:: geo_quote_name(name)


   .. py:method:: convert_extent(clob)


   .. py:method:: geo_db_type(f)

      Return the geometry database type for Oracle. Unlike other spatial
      backends, no stored procedure is necessary and it's the same for all
      geometry types.



   .. py:method:: get_distance(f, value, lookup_type)

      Return the distance parameters given the value and the lookup type.
      On Oracle, geometry columns with a geodetic coordinate system behave
      implicitly like a geography column, and thus meters will be used as
      the distance parameter on them.



   .. py:method:: get_geom_placeholder(f, value, compiler)


   .. py:method:: spatial_aggregate_name(agg_name)

      Return the spatial aggregate SQL name.



   .. py:method:: geometry_columns()


   .. py:method:: spatial_ref_sys()


   .. py:method:: modify_insert_params(placeholder, params)

      Drop out insert parameters for NULL placeholder. Needed for Oracle Spatial
      backend due to #10888.



   .. py:method:: get_geometry_converter(expression)


   .. py:method:: get_area_att_for_field(field)


