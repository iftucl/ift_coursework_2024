django.contrib.flatpages.templatetags.flatpages
===============================================

.. py:module:: django.contrib.flatpages.templatetags.flatpages


Attributes
----------

.. autoapisummary::

   django.contrib.flatpages.templatetags.flatpages.register


Classes
-------

.. autoapisummary::

   django.contrib.flatpages.templatetags.flatpages.FlatpageNode


Functions
---------

.. autoapisummary::

   django.contrib.flatpages.templatetags.flatpages.get_flatpages


Module Contents
---------------

.. py:data:: register

.. py:class:: FlatpageNode(context_name, starts_with=None, user=None)

   Bases: :py:obj:`django.template.Node`


   .. py:attribute:: context_name


   .. py:method:: render(context)

      Return the node rendered as a string.



.. py:function:: get_flatpages(parser, token)

   Retrieve all flatpage objects available for the current site and
   visible to the specific user (or visible to all users if no user is
   specified). Populate the template context with them in a variable
   whose name is defined by the ``as`` clause.

   An optional ``for`` clause controls the user whose permissions are used in
   determining which flatpages are visible.

   An optional argument, ``starts_with``, limits the returned flatpages to
   those beginning with a particular base URL. This argument can be a variable
   or a string, as it resolves from the template context.

   Syntax::

       {% get_flatpages ['url_starts_with'] [for user] as context_name %}

   Example usage::

       {% get_flatpages as flatpages %}
       {% get_flatpages for someuser as flatpages %}
       {% get_flatpages '/about/' as about_pages %}
       {% get_flatpages prefix as about_pages %}
       {% get_flatpages '/about/' for someuser as about_pages %}


