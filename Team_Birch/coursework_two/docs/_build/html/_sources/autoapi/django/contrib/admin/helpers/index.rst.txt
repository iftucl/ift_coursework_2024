django.contrib.admin.helpers
============================

.. py:module:: django.contrib.admin.helpers


Attributes
----------

.. autoapisummary::

   django.contrib.admin.helpers.ACTION_CHECKBOX_NAME
   django.contrib.admin.helpers.checkbox


Classes
-------

.. autoapisummary::

   django.contrib.admin.helpers.ActionForm
   django.contrib.admin.helpers.AdminForm
   django.contrib.admin.helpers.Fieldset
   django.contrib.admin.helpers.Fieldline
   django.contrib.admin.helpers.AdminField
   django.contrib.admin.helpers.AdminReadonlyField
   django.contrib.admin.helpers.InlineAdminFormSet
   django.contrib.admin.helpers.InlineAdminForm
   django.contrib.admin.helpers.InlineFieldset
   django.contrib.admin.helpers.AdminErrorList


Module Contents
---------------

.. py:data:: ACTION_CHECKBOX_NAME
   :value: '_selected_action'


.. py:class:: ActionForm

   Bases: :py:obj:`django.forms.Form`


   .. py:attribute:: action


   .. py:attribute:: select_across


.. py:data:: checkbox

.. py:class:: AdminForm(form, fieldsets, prepopulated_fields, readonly_fields=None, model_admin=None)

   .. py:attribute:: prepopulated_fields


   .. py:attribute:: model_admin
      :value: None



   .. py:attribute:: readonly_fields
      :value: None



   .. py:property:: errors


   .. py:property:: non_field_errors


   .. py:property:: fields


   .. py:property:: is_bound


   .. py:property:: media


.. py:class:: Fieldset(form, name=None, readonly_fields=(), fields=(), classes=(), description=None, model_admin=None)

   .. py:attribute:: form


   .. py:attribute:: classes
      :value: ''



   .. py:attribute:: description
      :value: None



   .. py:attribute:: model_admin
      :value: None



   .. py:attribute:: readonly_fields
      :value: ()



   .. py:property:: media


.. py:class:: Fieldline(form, field, readonly_fields=None, model_admin=None)

   .. py:attribute:: form


   .. py:attribute:: has_visible_field


   .. py:attribute:: model_admin
      :value: None



   .. py:attribute:: readonly_fields
      :value: None



   .. py:method:: errors()


.. py:class:: AdminField(form, field, is_first)

   .. py:attribute:: field


   .. py:attribute:: is_first


   .. py:attribute:: is_checkbox


   .. py:attribute:: is_readonly
      :value: False



   .. py:method:: label_tag()


   .. py:method:: errors()


.. py:class:: AdminReadonlyField(form, field, is_first, model_admin=None)

   .. py:attribute:: field


   .. py:attribute:: form


   .. py:attribute:: model_admin
      :value: None



   .. py:attribute:: is_first


   .. py:attribute:: is_checkbox
      :value: False



   .. py:attribute:: is_readonly
      :value: True



   .. py:attribute:: empty_value_display


   .. py:method:: label_tag()


   .. py:method:: get_admin_url(remote_field, remote_obj)


   .. py:method:: contents()


.. py:class:: InlineAdminFormSet(inline, formset, fieldsets, prepopulated_fields=None, readonly_fields=None, model_admin=None, has_add_permission=True, has_change_permission=True, has_delete_permission=True, has_view_permission=True)

   A wrapper around an inline formset for use in the admin system.


   .. py:attribute:: opts


   .. py:attribute:: formset


   .. py:attribute:: fieldsets


   .. py:attribute:: model_admin
      :value: None



   .. py:attribute:: readonly_fields
      :value: None



   .. py:attribute:: prepopulated_fields
      :value: None



   .. py:attribute:: classes
      :value: ''



   .. py:attribute:: has_add_permission
      :value: True



   .. py:attribute:: has_change_permission
      :value: True



   .. py:attribute:: has_delete_permission
      :value: True



   .. py:attribute:: has_view_permission
      :value: True



   .. py:method:: fields()


   .. py:method:: inline_formset_data()


   .. py:property:: forms


   .. py:method:: non_form_errors()


   .. py:property:: is_bound


   .. py:property:: total_form_count


   .. py:property:: media


.. py:class:: InlineAdminForm(formset, form, fieldsets, prepopulated_fields, original, readonly_fields=None, model_admin=None, view_on_site_url=None)

   Bases: :py:obj:`AdminForm`


   A wrapper around an inline form for use in the admin system.


   .. py:attribute:: formset


   .. py:attribute:: model_admin
      :value: None



   .. py:attribute:: original


   .. py:attribute:: show_url


   .. py:attribute:: absolute_url
      :value: None



   .. py:method:: needs_explicit_pk_field()


   .. py:method:: pk_field()


   .. py:method:: fk_field()


   .. py:method:: deletion_field()


.. py:class:: InlineFieldset(formset, *args, **kwargs)

   Bases: :py:obj:`Fieldset`


   .. py:attribute:: formset


.. py:class:: AdminErrorList(form, inline_formsets)

   Bases: :py:obj:`django.forms.utils.ErrorList`


   Store errors for the form/formsets in an add/change view.


