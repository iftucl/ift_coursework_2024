django.contrib.gis.db.models.fields
===================================

.. py:module:: django.contrib.gis.db.models.fields


Classes
-------

.. autoapisummary::

   django.contrib.gis.db.models.fields.SRIDCacheEntry
   django.contrib.gis.db.models.fields.BaseSpatialField
   django.contrib.gis.db.models.fields.GeometryField
   django.contrib.gis.db.models.fields.PointField
   django.contrib.gis.db.models.fields.LineStringField
   django.contrib.gis.db.models.fields.PolygonField
   django.contrib.gis.db.models.fields.MultiPointField
   django.contrib.gis.db.models.fields.MultiLineStringField
   django.contrib.gis.db.models.fields.MultiPolygonField
   django.contrib.gis.db.models.fields.GeometryCollectionField
   django.contrib.gis.db.models.fields.ExtentField
   django.contrib.gis.db.models.fields.RasterField


Functions
---------

.. autoapisummary::

   django.contrib.gis.db.models.fields.get_srid_info


Module Contents
---------------

.. py:class:: SRIDCacheEntry

   Bases: :py:obj:`tuple`


   .. py:attribute:: units


   .. py:attribute:: units_name


   .. py:attribute:: spheroid


   .. py:attribute:: geodetic


.. py:function:: get_srid_info(srid, connection)

   Return the units, unit name, and spheroid WKT associated with the
   given SRID from the `spatial_ref_sys` (or equivalent) spatial database
   table for the given database connection.  These results are cached.


.. py:class:: BaseSpatialField(verbose_name=None, srid=4326, spatial_index=True, **kwargs)

   Bases: :py:obj:`django.db.models.Field`


   The Base GIS Field.

   It's used as a base class for GeometryField and RasterField. Defines
   properties that are common to all GIS fields such as the characteristics
   of the spatial reference system of the field.


   .. py:attribute:: description


   .. py:attribute:: empty_strings_allowed
      :value: False



   .. py:attribute:: spatial_index
      :value: True



   .. py:attribute:: srid
      :value: 4326



   .. py:method:: deconstruct()


   .. py:method:: db_type(connection)


   .. py:method:: spheroid(connection)


   .. py:method:: units(connection)


   .. py:method:: units_name(connection)


   .. py:method:: geodetic(connection)

      Return true if this field's SRID corresponds with a coordinate
      system that uses non-projected units (e.g., latitude/longitude).



   .. py:method:: get_placeholder(value, compiler, connection)

      Return the placeholder for the spatial column for the
      given value.



   .. py:method:: get_srid(obj)

      Return the default SRID for the given geometry or raster, taking into
      account the SRID set for the field. For example, if the input geometry
      or raster doesn't have an SRID, then the SRID of the field will be
      returned.



   .. py:method:: get_db_prep_value(value, connection, *args, **kwargs)


   .. py:method:: get_raster_prep_value(value, is_candidate)

      Return a GDALRaster if conversion is successful, otherwise return None.



   .. py:method:: get_prep_value(value)


.. py:class:: GeometryField(verbose_name=None, dim=2, geography=False, *, extent=(-180.0, -90.0, 180.0, 90.0), tolerance=0.05, **kwargs)

   Bases: :py:obj:`BaseSpatialField`


   The base Geometry field -- maps to the OpenGIS Specification Geometry type.


   .. py:attribute:: description


   .. py:attribute:: form_class


   .. py:attribute:: geom_type
      :value: 'GEOMETRY'



   .. py:attribute:: geom_class
      :value: None



   .. py:attribute:: dim
      :value: 2



   .. py:attribute:: geography
      :value: False



   .. py:method:: deconstruct()


   .. py:method:: contribute_to_class(cls, name, **kwargs)


   .. py:method:: formfield(**kwargs)


   .. py:method:: select_format(compiler, sql, params)

      Return the selection format string, depending on the requirements
      of the spatial backend. For example, Oracle and MySQL require custom
      selection formats in order to retrieve geometries in OGC WKB.



.. py:class:: PointField(verbose_name=None, dim=2, geography=False, *, extent=(-180.0, -90.0, 180.0, 90.0), tolerance=0.05, **kwargs)

   Bases: :py:obj:`GeometryField`


   The base Geometry field -- maps to the OpenGIS Specification Geometry type.


   .. py:attribute:: geom_type
      :value: 'POINT'



   .. py:attribute:: geom_class


   .. py:attribute:: form_class


   .. py:attribute:: description


.. py:class:: LineStringField(verbose_name=None, dim=2, geography=False, *, extent=(-180.0, -90.0, 180.0, 90.0), tolerance=0.05, **kwargs)

   Bases: :py:obj:`GeometryField`


   The base Geometry field -- maps to the OpenGIS Specification Geometry type.


   .. py:attribute:: geom_type
      :value: 'LINESTRING'



   .. py:attribute:: geom_class


   .. py:attribute:: form_class


   .. py:attribute:: description


.. py:class:: PolygonField(verbose_name=None, dim=2, geography=False, *, extent=(-180.0, -90.0, 180.0, 90.0), tolerance=0.05, **kwargs)

   Bases: :py:obj:`GeometryField`


   The base Geometry field -- maps to the OpenGIS Specification Geometry type.


   .. py:attribute:: geom_type
      :value: 'POLYGON'



   .. py:attribute:: geom_class


   .. py:attribute:: form_class


   .. py:attribute:: description


.. py:class:: MultiPointField(verbose_name=None, dim=2, geography=False, *, extent=(-180.0, -90.0, 180.0, 90.0), tolerance=0.05, **kwargs)

   Bases: :py:obj:`GeometryField`


   The base Geometry field -- maps to the OpenGIS Specification Geometry type.


   .. py:attribute:: geom_type
      :value: 'MULTIPOINT'



   .. py:attribute:: geom_class


   .. py:attribute:: form_class


   .. py:attribute:: description


.. py:class:: MultiLineStringField(verbose_name=None, dim=2, geography=False, *, extent=(-180.0, -90.0, 180.0, 90.0), tolerance=0.05, **kwargs)

   Bases: :py:obj:`GeometryField`


   The base Geometry field -- maps to the OpenGIS Specification Geometry type.


   .. py:attribute:: geom_type
      :value: 'MULTILINESTRING'



   .. py:attribute:: geom_class


   .. py:attribute:: form_class


   .. py:attribute:: description


.. py:class:: MultiPolygonField(verbose_name=None, dim=2, geography=False, *, extent=(-180.0, -90.0, 180.0, 90.0), tolerance=0.05, **kwargs)

   Bases: :py:obj:`GeometryField`


   The base Geometry field -- maps to the OpenGIS Specification Geometry type.


   .. py:attribute:: geom_type
      :value: 'MULTIPOLYGON'



   .. py:attribute:: geom_class


   .. py:attribute:: form_class


   .. py:attribute:: description


.. py:class:: GeometryCollectionField(verbose_name=None, dim=2, geography=False, *, extent=(-180.0, -90.0, 180.0, 90.0), tolerance=0.05, **kwargs)

   Bases: :py:obj:`GeometryField`


   The base Geometry field -- maps to the OpenGIS Specification Geometry type.


   .. py:attribute:: geom_type
      :value: 'GEOMETRYCOLLECTION'



   .. py:attribute:: geom_class


   .. py:attribute:: form_class


   .. py:attribute:: description


.. py:class:: ExtentField

   Bases: :py:obj:`django.db.models.Field`


   Used as a return value from an extent aggregate


   .. py:attribute:: description


   .. py:method:: get_internal_type()


   .. py:method:: select_format(compiler, sql, params)


.. py:class:: RasterField(verbose_name=None, srid=4326, spatial_index=True, **kwargs)

   Bases: :py:obj:`BaseSpatialField`


   Raster field for GeoDjango -- evaluates into GDALRaster objects.


   .. py:attribute:: description


   .. py:attribute:: geom_type
      :value: 'RASTER'



   .. py:attribute:: geography
      :value: False



   .. py:method:: db_type(connection)


   .. py:method:: from_db_value(value, expression, connection)


   .. py:method:: contribute_to_class(cls, name, **kwargs)


   .. py:method:: get_transform(name)


