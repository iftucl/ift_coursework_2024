whitenoise.middleware
=====================

.. py:module:: whitenoise.middleware


Classes
-------

.. autoapisummary::

   whitenoise.middleware.WhiteNoiseMiddleware


Module Contents
---------------

.. py:class:: WhiteNoiseMiddleware(get_response=None, settings=settings)

   Bases: :py:obj:`whitenoise.base.WhiteNoise`


   Wrap WhiteNoise to allow it to function as Django middleware, rather
   than WSGI middleware.


   .. py:attribute:: get_response
      :value: None



   .. py:attribute:: static_prefix
      :value: '/Uninferable/'



   .. py:attribute:: static_root


   .. py:method:: serve(static_file, request)
      :staticmethod:



   .. py:method:: add_files_from_finders()


   .. py:method:: candidate_paths_for_url(url)


   .. py:method:: immutable_file_test(path, url)

      Determine whether given URL represents an immutable file (i.e. a
      file with a hash of its contents as part of its name) which can
      therefore be cached forever



   .. py:method:: get_name_without_hash(filename)

      Removes the version hash from a filename e.g, transforms
      'css/application.f3ea4bcc2.css' into 'css/application.css'

      Note: this is specific to the naming scheme used by Django's
      CachedStaticFilesStorage. You may have to override this if
      you are using a different static files versioning system



   .. py:method:: get_static_url(name)


