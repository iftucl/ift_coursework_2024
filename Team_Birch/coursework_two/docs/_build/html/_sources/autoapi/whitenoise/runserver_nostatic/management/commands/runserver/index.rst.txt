whitenoise.runserver_nostatic.management.commands.runserver
===========================================================

.. py:module:: whitenoise.runserver_nostatic.management.commands.runserver

.. autoapi-nested-parse::

   Subclass the existing 'runserver' command and change the default options
   to disable static file serving, allowing WhiteNoise to handle static files.

   There is some unpleasant hackery here because we don't know which command class
   to subclass until runtime as it depends on which INSTALLED_APPS we have, so we
   have to determine this dynamically.



Attributes
----------

.. autoapisummary::

   whitenoise.runserver_nostatic.management.commands.runserver.RunserverCommand


Classes
-------

.. autoapisummary::

   whitenoise.runserver_nostatic.management.commands.runserver.Command


Functions
---------

.. autoapisummary::

   whitenoise.runserver_nostatic.management.commands.runserver.get_next_runserver_command
   whitenoise.runserver_nostatic.management.commands.runserver.get_lower_priority_apps


Module Contents
---------------

.. py:function:: get_next_runserver_command()

   Return the next highest priority "runserver" command class


.. py:function:: get_lower_priority_apps()

   Yield all app module names below the current app in the INSTALLED_APPS list


.. py:data:: RunserverCommand

.. py:class:: Command

   Bases: :py:obj:`RunserverCommand`


   .. py:method:: add_arguments(parser)


