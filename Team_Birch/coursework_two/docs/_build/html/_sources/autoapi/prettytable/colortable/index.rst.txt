prettytable.colortable
======================

.. py:module:: prettytable.colortable


Attributes
----------

.. autoapisummary::

   prettytable.colortable.RESET_CODE


Classes
-------

.. autoapisummary::

   prettytable.colortable.Theme
   prettytable.colortable.Themes
   prettytable.colortable.ColorTable


Module Contents
---------------

.. py:data:: RESET_CODE
   :value: '\x1b[0m'


.. py:class:: Theme(default_color: str = '', vertical_char: str = '|', vertical_color: str = '', horizontal_char: str = '-', horizontal_color: str = '', junction_char: str = '+', junction_color: str = '')

   .. py:attribute:: default_color
      :value: ''



   .. py:attribute:: vertical_char
      :value: '|'



   .. py:attribute:: vertical_color
      :value: ''



   .. py:attribute:: horizontal_char
      :value: '-'



   .. py:attribute:: horizontal_color
      :value: ''



   .. py:attribute:: junction_char
      :value: '+'



   .. py:attribute:: junction_color
      :value: ''



   .. py:method:: format_code(s: str) -> str
      :staticmethod:


      Takes string and intelligently puts it into an ANSI escape sequence



.. py:class:: Themes

   .. py:attribute:: DEFAULT


   .. py:attribute:: DYSLEXIA_FRIENDLY


   .. py:attribute:: EARTH


   .. py:attribute:: GLARE_REDUCTION


   .. py:attribute:: HIGH_CONTRAST


   .. py:attribute:: LAVENDER


   .. py:attribute:: OCEAN


   .. py:attribute:: OCEAN_DEEP


   .. py:attribute:: PASTEL


.. py:class:: ColorTable(field_names=None, **kwargs)

   Bases: :py:obj:`prettytable.prettytable.PrettyTable`


   .. py:property:: theme
      :type: Theme



   .. py:method:: update_theme() -> None


   .. py:method:: get_string(**kwargs) -> str


