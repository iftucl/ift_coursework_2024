gunicorn.http.wsgi
==================

.. py:module:: gunicorn.http.wsgi


Attributes
----------

.. autoapisummary::

   gunicorn.http.wsgi.BLKSIZE
   gunicorn.http.wsgi.HEADER_VALUE_RE
   gunicorn.http.wsgi.log


Classes
-------

.. autoapisummary::

   gunicorn.http.wsgi.FileWrapper
   gunicorn.http.wsgi.WSGIErrorsWrapper
   gunicorn.http.wsgi.Response


Functions
---------

.. autoapisummary::

   gunicorn.http.wsgi.base_environ
   gunicorn.http.wsgi.default_environ
   gunicorn.http.wsgi.proxy_environ
   gunicorn.http.wsgi.create


Module Contents
---------------

.. py:data:: BLKSIZE
   :value: 1073741823


.. py:data:: HEADER_VALUE_RE

.. py:data:: log

.. py:class:: FileWrapper(filelike, blksize=8192)

   Bases: :py:obj:`object`


   .. py:attribute:: filelike


   .. py:attribute:: blksize
      :value: 8192



.. py:class:: WSGIErrorsWrapper(cfg)

   Bases: :py:obj:`io.RawIOBase`


   Base class for raw binary I/O.


   .. py:attribute:: streams
      :value: []



   .. py:method:: write(data)


.. py:function:: base_environ(cfg)

.. py:function:: default_environ(req, sock, cfg)

.. py:function:: proxy_environ(req)

.. py:function:: create(req, sock, client, server, cfg)

.. py:class:: Response(req, sock, cfg)

   Bases: :py:obj:`object`


   .. py:attribute:: req


   .. py:attribute:: sock


   .. py:attribute:: version
      :value: 'gunicorn'



   .. py:attribute:: status
      :value: None



   .. py:attribute:: chunked
      :value: False



   .. py:attribute:: must_close
      :value: False



   .. py:attribute:: headers
      :value: []



   .. py:attribute:: headers_sent
      :value: False



   .. py:attribute:: response_length
      :value: None



   .. py:attribute:: sent
      :value: 0



   .. py:attribute:: upgrade
      :value: False



   .. py:attribute:: cfg


   .. py:method:: force_close()


   .. py:method:: should_close()


   .. py:method:: start_response(status, headers, exc_info=None)


   .. py:method:: process_headers(headers)


   .. py:method:: is_chunked()


   .. py:method:: default_headers()


   .. py:method:: send_headers()


   .. py:method:: write(arg)


   .. py:method:: can_sendfile()


   .. py:method:: sendfile(respiter)


   .. py:method:: write_file(respiter)


   .. py:method:: close()


