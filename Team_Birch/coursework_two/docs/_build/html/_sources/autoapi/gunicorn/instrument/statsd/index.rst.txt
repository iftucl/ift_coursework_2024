gunicorn.instrument.statsd
==========================

.. py:module:: gunicorn.instrument.statsd

.. autoapi-nested-parse::

   Bare-bones implementation of statsD's protocol, client-side



Attributes
----------

.. autoapisummary::

   gunicorn.instrument.statsd.METRIC_VAR
   gunicorn.instrument.statsd.VALUE_VAR
   gunicorn.instrument.statsd.MTYPE_VAR
   gunicorn.instrument.statsd.GAUGE_TYPE
   gunicorn.instrument.statsd.COUNTER_TYPE
   gunicorn.instrument.statsd.HISTOGRAM_TYPE


Classes
-------

.. autoapisummary::

   gunicorn.instrument.statsd.Statsd


Module Contents
---------------

.. py:data:: METRIC_VAR
   :value: 'metric'


.. py:data:: VALUE_VAR
   :value: 'value'


.. py:data:: MTYPE_VAR
   :value: 'mtype'


.. py:data:: GAUGE_TYPE
   :value: 'gauge'


.. py:data:: COUNTER_TYPE
   :value: 'counter'


.. py:data:: HISTOGRAM_TYPE
   :value: 'histogram'


.. py:class:: Statsd(cfg)

   Bases: :py:obj:`gunicorn.glogging.Logger`


   statsD-based instrumentation, that passes as a logger


   .. py:attribute:: prefix


   .. py:attribute:: dogstatsd_tags


   .. py:method:: critical(msg, *args, **kwargs)


   .. py:method:: error(msg, *args, **kwargs)


   .. py:method:: warning(msg, *args, **kwargs)


   .. py:method:: exception(msg, *args, **kwargs)


   .. py:method:: info(msg, *args, **kwargs)


   .. py:method:: debug(msg, *args, **kwargs)


   .. py:method:: log(lvl, msg, *args, **kwargs)

      Log a given statistic if metric, value and type are present



   .. py:method:: access(resp, req, environ, request_time)

      Measure request duration
      request_time is a datetime.timedelta



   .. py:method:: gauge(name, value)


   .. py:method:: increment(name, value, sampling_rate=1.0)


   .. py:method:: decrement(name, value, sampling_rate=1.0)


   .. py:method:: histogram(name, value)


