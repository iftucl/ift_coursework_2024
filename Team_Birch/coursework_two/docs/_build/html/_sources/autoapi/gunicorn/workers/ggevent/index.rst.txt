gunicorn.workers.ggevent
========================

.. py:module:: gunicorn.workers.ggevent


Attributes
----------

.. autoapisummary::

   gunicorn.workers.ggevent.VERSION


Classes
-------

.. autoapisummary::

   gunicorn.workers.ggevent.GeventWorker
   gunicorn.workers.ggevent.GeventResponse
   gunicorn.workers.ggevent.PyWSGIHandler
   gunicorn.workers.ggevent.PyWSGIServer
   gunicorn.workers.ggevent.GeventPyWSGIWorker


Module Contents
---------------

.. py:data:: VERSION

.. py:class:: GeventWorker(*args, **kwargs)

   Bases: :py:obj:`gunicorn.workers.base_async.AsyncWorker`


   .. py:attribute:: server_class
      :value: None



   .. py:attribute:: wsgi_handler
      :value: None



   .. py:method:: patch()


   .. py:method:: notify()


   .. py:method:: timeout_ctx()


   .. py:method:: run()


   .. py:method:: handle(listener, client, addr)


   .. py:method:: handle_request(listener_name, req, sock, addr)


   .. py:method:: handle_quit(sig, frame)


   .. py:method:: handle_usr1(sig, frame)


   .. py:method:: init_process()


.. py:class:: GeventResponse(status, headers, clength)

   Bases: :py:obj:`object`


   .. py:attribute:: status
      :value: None



   .. py:attribute:: headers
      :value: None



   .. py:attribute:: sent
      :value: None



.. py:class:: PyWSGIHandler

   Bases: :py:obj:`gevent.pywsgi.WSGIHandler`


   .. py:method:: log_request()


   .. py:method:: get_environ()


.. py:class:: PyWSGIServer

   Bases: :py:obj:`gevent.pywsgi.WSGIServer`


.. py:class:: GeventPyWSGIWorker(*args, **kwargs)

   Bases: :py:obj:`GeventWorker`


   The Gevent StreamServer based workers.


   .. py:attribute:: server_class


   .. py:attribute:: wsgi_handler


