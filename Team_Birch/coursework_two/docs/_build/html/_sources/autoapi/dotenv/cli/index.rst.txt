dotenv.cli
==========

.. py:module:: dotenv.cli


Functions
---------

.. autoapisummary::

   dotenv.cli.enumerate_env
   dotenv.cli.cli
   dotenv.cli.stream_file
   dotenv.cli.list
   dotenv.cli.set
   dotenv.cli.get
   dotenv.cli.unset
   dotenv.cli.run
   dotenv.cli.run_command


Module Contents
---------------

.. py:function:: enumerate_env()

   Return a path for the ${pwd}/.env file.

   If pwd does not exist, return None.


.. py:function:: cli(ctx: click.Context, file: Any, quote: Any, export: Any) -> None

   This script is used to set, get or unset values from a .env file.


.. py:function:: stream_file(path: os.PathLike) -> Iterator[IO[str]]

   Open a file and yield the corresponding (decoded) stream.

   Exits with error code 2 if the file cannot be opened.


.. py:function:: list(ctx: click.Context, format: bool) -> None

   Display all the stored key/value.


.. py:function:: set(ctx: click.Context, key: Any, value: Any) -> None

   Store the given key/value.


.. py:function:: get(ctx: click.Context, key: Any) -> None

   Retrieve the value for the given key.


.. py:function:: unset(ctx: click.Context, key: Any) -> None

   Removes the given key.


.. py:function:: run(ctx: click.Context, override: bool, commandline: List[str]) -> None

   Run command with environment variables present.


.. py:function:: run_command(command: List[str], env: Dict[str, str]) -> int

   Run command in sub process.

   Runs the command in a sub process with the variables from `env`
   added in the current environment variables.

   :param command: The command and it's parameters
   :type command: List[str]
   :param env: The additional environment variables
   :type env: Dict

   :returns: The return code of the command
   :rtype: int


