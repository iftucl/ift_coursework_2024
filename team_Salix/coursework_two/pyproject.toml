[project]
name = "team-salix"
version = "0.1.0"
description = "CSR Report Collection System"
authors = [
    {name = "Team Salix", email = "team.salix@example.com"}
]
requires-python = ">=3.9,<4.0"
package-mode = false

[tool.poetry]
name = "team-salix"
version = "0.1.0"
description = "CSR Report Collection System"
authors = ["Team Salix <team.salix@example.com>"]
readme = "README.md"
package-mode = false
packages = [
    { include = "pipeline1" },
    { include = "pipeline2" },
    { include = "pipeline3" },
    { include = "pipeline4" },
    { include = "tests" },
    { include = "upload_to_minio.py" },
    { include = "scheduler.py" },
    { include = "esg_indicator_extract.py" }
]

[tool.poetry.dependencies]
python = ">=3.9,<3.9.7 || >3.9.7,<4.0"
pymupdf = "^1.23.0"
pandas = ">=2.2.0,<3.0.0"
openpyxl = "^3.1.0"
openai = "^1.0.0"
minio = "^7.2.0"
psycopg2-binary = ">=2.9.0,<3.0.0"
pyyaml = "^6.0.0"
cryptography = "^42.0.0"
python-dotenv = "^1.0.0"
pdfplumber = "^0.11.0"
PyPDF2 = "^3.0.0"
docling = "^2.31.0"
llama-parse = "^0.6.20"
requests = ">=2.31.0,<3.0.0"
urllib3 = ">=1.26.0,<2.0.0"
selenium = ">=4.17.0,<5.0.0"
boto3 = ">=1.34.0,<2.0.0"
tqdm = ">=4.66.0,<5.0.0"
aiohttp = ">=3.9.0,<4.0.0"
nest-asyncio = ">=1.6.0,<2.0.0"
apscheduler = ">=3.10.0,<4.0.0"
sphinx-rtd-theme = ">=2.0.0,<3.0.0"
streamlit = "^1.45.0"
pytest-asyncio = "^0.26.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.0.0,<9.0.0"
pytest-cov = ">=4.1.0,<5.0.0"
flake8 = ">=6.0.0"
black = "^23.0.0"
isort = "^5.12.0"
bandit = "^1.7.0"
safety = "^3.0.0"
pre-commit = "^4.2.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = ">=8.0.0,<9.0.0"
pytest-cov = ">=4.1.0,<5.0.0"
pytest-asyncio = ">=0.23.0,<1.0.0"
pytest-mock = ">=3.12.0,<4.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = ">=7.1.0,<8.0.0"
sphinx-rtd-theme = ">=2.0.0,<3.0.0"
myst-parser = ">=2.0.0,<3.0.0"
sphinx-autodoc-typehints = ">=2.0.0,<3.0.0"
sphinxcontrib-applehelp = ">=1.0.0,<2.0.0"
sphinxcontrib-devhelp = ">=1.0.0,<2.0.0"
sphinxcontrib-htmlhelp = ">=2.0.0,<3.0.0"
sphinxcontrib-qthelp = ">=1.0.0,<2.0.0"
sphinxcontrib-serializinghtml = ">=1.0.0,<2.0.0"
sphinx-copybutton = ">=0.5.0,<1.0.0"
sphinx-tabs = ">=3.4.0,<4.0.0"
sphinxcontrib-mermaid = "*"
sphinxcontrib-plantuml = ">=0.25.0,<1.0.0"
sphinxcontrib-programoutput = ">=0.17.0,<1.0.0"
sphinxcontrib-spelling = ">=7.7.0,<8.0.0"
sphinxcontrib-svg2pdfconverter = ">=1.2.0,<2.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | docs
  | tests
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "docs/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

[tool.sphinx]
project = "Team Salix CSR Report Pipeline"
copyright = "2024, Team Salix"
author = "Team Salix"
release = "0.1.0"
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",
    "sphinx.ext.viewcode",
    "sphinx.ext.githubpages",
    "sphinx_rtd_theme",
    "sphinx.ext.intersphinx",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx.ext.mathjax",
    "sphinx.ext.ifconfig",
    "sphinx.ext.autosummary",
    "sphinx_autodoc_typehints"
]
templates_path = ["_templates"]
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]
html_theme = "sphinx_rtd_theme"
html_static_path = ["_static"]

[tool.flake8]
max-line-length = 120
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D200",  # One-line docstring should fit on one line with quotes
    "D202",  # No blank lines allowed after function docstring
    "D205",  # 1 blank line required between summary line and description
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D402",  # First line should not be the function's "signature"
    "D403",  # First word of the first line should be properly capitalized
    "D404",  # First word of the docstring should not be This
    "D405",  # Section name should be properly capitalized
    "D406",  # Section name should end with a colon
    "D407",  # Missing dashed underline after section
    "D408",  # Section underline should be in the line following the section's name
    "D409",  # Section underline should match the length of its name
    "D410",  # Missing blank line after section
    "D411",  # Missing blank line before section
    "D412",  # No blank lines allowed between a section header and its content
    "D413",  # Missing blank line after last section
    "D414",  # Section has no content
    "D415",  # First line should end with a period, question mark, or exclamation point
    "D416",  # Section name should end with a colon
    "D417",  # Missing argument descriptions in the docstring
    "D418",  # Function/ method decorated with @overload shouldn't contain a docstring
    "D419",  # First line should be in imperative mood
    "E128",  # Continuation line under-indented for visual indent
    "E129",  # Visually indented line with same indent as next logical line
    "E203",  # Whitespace before ':'
    "E302",  # Expected 2 blank lines, found 1
    "E305",  # Expected 2 blank lines after class or function definition, found 1
    "E501",  # Line too long
    "F401",  # Module imported but unused
    "F541",  # f-string is missing placeholders
    "F811",  # Redefinition of unused name
    "F841",  # Local variable is assigned to but never used
    "W605",  # Invalid escape sequence
    "E722",  # Do not use bare 'except'
    "E712",  # Comparison to True/False should be 'if cond is True/False:' or 'if cond:'
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    ".pytest_cache",
    ".tox",
    ".venv",
    "venv",
    "ENV",
    "env",
    "*.egg-info",
    ".eggs",
    "docs",
    "tests"
]